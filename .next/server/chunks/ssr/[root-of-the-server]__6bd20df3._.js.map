{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/components/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nconst Sidebar = () => {\n  const pathname = usePathname();\n\n  const menuItems = [\n    {\n      href: '/',\n      label: 'Dashboard',\n      isActive: pathname === '/'\n    },\n    {\n      href: '/veri-yukle',\n      label: 'Veri Yükle',\n      isActive: pathname === '/veri-yukle'\n    },\n    {\n      href: '/sirket-fiyat-fatura',\n      label: 'Şirket İçin Fiyat - Fatura',\n      isActive: pathname === '/sirket-fiyat-fatura'\n    },\n    {\n      href: '/sofor-fiyat-fatura',\n      label: 'Şöför İçin Fiyat - Fatura',\n      isActive: pathname === '/sofor-fiyat-fatura'\n    },\n    {\n      href: '/sirket-bilanco',\n      label: 'Şirket Bilanço',\n      isActive: pathname === '/sirket-bilanco'\n    },\n    {\n      href: '/sofor-bilanco',\n      label: 'Şöför Bilanço',\n      isActive: pathname === '/sofor-bilanco'\n    },\n    {\n      href: '/cek-yonetimi',\n      label: 'Çek Yönetimi',\n      isActive: pathname === '/cek-yonetimi'\n    },\n    {\n      href: '/veritabani-yonetimi',\n      label: 'Veritabanı Yönetimi',\n      isActive: pathname === '/veritabani-yonetimi'\n    },\n    {\n      href: '/eski-veri-yukle',\n      label: 'Eski Veri Yükle',\n      isActive: pathname === '/eski-veri-yukle'\n    }\n  ];\n\n  return (\n    <div className=\"w-64 min-w-64 flex-shrink-0 bg-white shadow-lg\">\n      <div className=\"p-6\">\n        <div className=\"space-y-2\">\n          {menuItems.map((item, index) => (\n            <Link\n              key={item.href}\n              href={item.href}\n              className={`block w-full p-3 text-center rounded-lg font-medium transition-colors ${\n                item.isActive\n                  ? 'bg-blue-600 text-white'\n                  : 'border border-gray-200 text-gray-700 hover:bg-gray-50'\n              } ${\n                // Grup ayırıcıları için boşluk ekle\n                (index === 1 || index === 4 || index === 7) ? 'mt-6' : ''\n              }`}\n            >\n              {item.label}\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,YAAY;QAChB;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,8OAAC,4JAAA,CAAA,UAAI;wBAEH,MAAM,KAAK,IAAI;wBACf,WAAW,CAAC,sEAAsE,EAChF,KAAK,QAAQ,GACT,2BACA,wDACL,CAAC,EACA,oCAAoC;wBACnC,UAAU,KAAK,UAAU,KAAK,UAAU,IAAK,SAAS,IACvD;kCAED,KAAK,KAAK;uBAXN,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;AAkB5B;uCAEe","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sirket-fiyat-fatura/components/DonemSecimi.tsx"],"sourcesContent":["import React from 'react';\n\ninterface DonemSecimiProps {\n  secilenAy: number | null;\n  setSecilenAy: (ay: number | null) => void;\n  secilenDonem: number | null;\n  setSecilenDonem: (donem: number | null) => void;\n}\n\nconst DonemSecimi: React.FC<DonemSecimiProps> = ({\n  secilenAy,\n  setSecilenAy,\n  secilenDonem,\n  setSecilenDonem\n}) => {\n  const aylar = [\n    { deger: 1, ad: 'Ocak' },\n    { deger: 2, ad: 'Şubat' },\n    { deger: 3, ad: 'Mart' },\n    { deger: 4, ad: 'Nisan' },\n    { deger: 5, ad: 'Mayıs' },\n    { deger: 6, ad: 'Haziran' },\n    { deger: 7, ad: 'Temmuz' },\n    { deger: 8, ad: 'Ağustos' },\n    { deger: 9, ad: 'Eylül' },\n    { deger: 10, ad: 'Ekim' },\n    { deger: 11, ad: 'Kasım' },\n    { deger: 12, ad: 'Aralık' }\n  ];\n\n  const donemler = [\n    { deger: 1, ad: '1. Dönem (1-10)' },\n    { deger: 2, ad: '2. Dönem (11-20)' },\n    { deger: 3, ad: '3. Dönem (21-31)' }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div>\n        <label className=\"block mb-2 text-sm font-medium\">Ay Seçiniz</label>\n        <select\n          className=\"w-full p-2 border rounded-md\"\n          value={secilenAy || ''}\n          onChange={(e) => setSecilenAy(Number(e.target.value) || null)}\n        >\n          <option value=\"\">Ay Seçiniz</option>\n          {aylar.map((ay) => (\n            <option key={ay.deger} value={ay.deger}>\n              {ay.ad}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div>\n        <label className=\"block mb-2 text-sm font-medium\">Dönem Seçiniz</label>\n        <select\n          className=\"w-full p-2 border rounded-md\"\n          value={secilenDonem || ''}\n          onChange={(e) => setSecilenDonem(Number(e.target.value) || null)}\n        >\n          <option value=\"\">Dönem Seçiniz</option>\n          {donemler.map((donem) => (\n            <option key={donem.deger} value={donem.deger}>\n              {donem.ad}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default DonemSecimi; "],"names":[],"mappings":";;;;;AASA,MAAM,cAA0C,CAAC,EAC/C,SAAS,EACT,YAAY,EACZ,YAAY,EACZ,eAAe,EAChB;IACC,MAAM,QAAQ;QACZ;YAAE,OAAO;YAAG,IAAI;QAAO;QACvB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAO;QACvB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAU;QAC1B;YAAE,OAAO;YAAG,IAAI;QAAS;QACzB;YAAE,OAAO;YAAG,IAAI;QAAU;QAC1B;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAI,IAAI;QAAO;QACxB;YAAE,OAAO;YAAI,IAAI;QAAQ;QACzB;YAAE,OAAO;YAAI,IAAI;QAAS;KAC3B;IAED,MAAM,WAAW;QACf;YAAE,OAAO;YAAG,IAAI;QAAkB;QAClC;YAAE,OAAO;YAAG,IAAI;QAAmB;QACnC;YAAE,OAAO;YAAG,IAAI;QAAmB;KACpC;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBACC,WAAU;wBACV,OAAO,aAAa;wBACpB,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;;0CAExD,8OAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,MAAM,GAAG,CAAC,CAAC,mBACV,8OAAC;oCAAsB,OAAO,GAAG,KAAK;8CACnC,GAAG,EAAE;mCADK,GAAG,KAAK;;;;;;;;;;;;;;;;;0BAO3B,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBACC,WAAU;wBACV,OAAO,gBAAgB;wBACvB,UAAU,CAAC,IAAM,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;;0CAE3D,8OAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,SAAS,GAAG,CAAC,CAAC,sBACb,8OAAC;oCAAyB,OAAO,MAAM,KAAK;8CACzC,MAAM,EAAE;mCADE,MAAM,KAAK;;;;;;;;;;;;;;;;;;;;;;;AAQpC;uCAEe","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sirket-fiyat-fatura/components/SeferlerTablosu.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Sefer {\n  sefer_id: number;\n  sira_no: number;\n  irsaliye_numarasi?: string;\n  irsaliye_tarihi?: string;\n  cikis_yeri: string;\n  tahliye_edilen_firma: string;\n  tahliye_yeri: string;\n  tonaj_kg: string;\n  mt?: number;\n  arac_tipi: string;\n  sirketten_alinan_ucret: number;\n  sofore_odenen_ucret: number;\n  aciklama?: string;\n  sirket?: {\n    sirket_id: number;\n    sirket_adi: string;\n  };\n  arac?: {\n    arac_id: number;\n    plaka: string;\n    sofor_adi: string;\n  };\n}\n\n// Fiyat listesi için tip tanımı\ninterface FiyatListesi {\n  fiyat_listesi_id: number;\n  sirket_id: number;\n  tahliye_yeri: string;\n  km: number | null;\n  arac_tipi: string;\n  ucret: number;\n  sofor_ucreti: number | null;\n}\n\ninterface SeferlerTablosuProps {\n  seferler: Sefer[];\n  fiyatGuncelle: (seferId: number, yeniFiyat: number) => Promise<void>;\n}\n\nconst SeferlerTablosu: React.FC<SeferlerTablosuProps> = ({ seferler, fiyatGuncelle }) => {\n  const [yeniFiyatlar, setYeniFiyatlar] = useState<{ [key: number]: number }>({});\n  const [kaydediliyor, setKaydediliyor] = useState(false);\n  const [fiyatListesi, setFiyatListesi] = useState<FiyatListesi[]>([]);\n  const [eslesenYerler, setEslesenYerler] = useState<{ [key: number]: string }>({});\n  \n  // Seferlerin sıra numarasına göre sıralanması için yardımcı fonksiyon\n  const siralamaYap = (seferler: Sefer[]): Sefer[] => {\n    return [...seferler].sort((a, b) => {\n      const aNum = Number(a.sira_no);\n      const bNum = Number(b.sira_no);\n      return aNum - bNum;\n    });\n  };\n  \n  // Seferler değiştiğinde yeniFiyatlar state'ini güncelle\n  useEffect(() => {\n    const fiyatlar: { [key: number]: number } = {};\n    seferler.forEach(sefer => {\n      if (sefer && sefer.sefer_id && typeof sefer.sirketten_alinan_ucret === 'number') {\n        // Sayısal değer olarak kaydet\n        fiyatlar[sefer.sefer_id] = Number(sefer.sirketten_alinan_ucret);\n      }\n    });\n    console.log(\"Fiyatlar state yüklendi:\", fiyatlar);\n    setYeniFiyatlar(fiyatlar);\n  }, [seferler]);\n\n  // Tüm fiyat listesini getir\n  useEffect(() => {\n    fetchFiyatListesi();\n  }, [seferler]);\n\n  // Fiyat listesini getiren fonksiyon\n  const fetchFiyatListesi = async () => {\n    try {\n      console.log(\"Fiyat listesi getiriliyor...\");\n      const response = await fetch('/api/fiyat-listesi?tip=sirket');\n      if (response.ok) {\n        const data = await response.json();\n        setFiyatListesi(data);\n        console.log(`Alınan fiyat listesi: ${data.length} kayıt`);\n        \n        // Mevcut fiyatlar için eşleşen yerleri bul\n        const eslesmeYerleri: { [key: number]: string } = {};\n        seferler.forEach(sefer => {\n          if (sefer.sirket) {\n            // Araç tipine göre filtrelenmiş fiyat listesi\n            const filteredList = data.filter(\n              (fiyat: FiyatListesi) =>\n                fiyat.sirket_id === sefer.sirket?.sirket_id &&\n                fiyat.arac_tipi === sefer.arac_tipi\n            );\n            \n            console.log(`Sefer #${sefer.sefer_id} için filtrelenmiş fiyat listesi (${sefer.arac_tipi}):`, filteredList.length);\n            \n            // Fiyata en yakın olanı bul\n            const eslesenFiyat = filteredList.find(\n              (fiyat: FiyatListesi) =>\n                Math.abs(fiyat.ucret - sefer.sirketten_alinan_ucret) < 1.0 // Tolerans değeri\n            );\n            \n            if (eslesenFiyat) {\n              eslesmeYerleri[sefer.sefer_id] = eslesenFiyat.tahliye_yeri;\n              console.log(`Sefer #${sefer.sefer_id} için eşleşen fiyat bulundu: ${eslesenFiyat.tahliye_yeri} (Fiyat: ${eslesenFiyat.ucret})`);\n            } else {\n              console.log(`Sefer #${sefer.sefer_id} için eşleşen fiyat bulunamadı - Şirket: ${sefer.sirket.sirket_id}, Araç: ${sefer.arac_tipi}, Fiyat: ${sefer.sirketten_alinan_ucret}`);\n              \n              // En yakın fiyatı göster (debug için)\n              if (filteredList.length > 0) {\n                filteredList.sort((a: FiyatListesi, b: FiyatListesi) => \n                  Math.abs(a.ucret - sefer.sirketten_alinan_ucret) - Math.abs(b.ucret - sefer.sirketten_alinan_ucret)\n                );\n                console.log(`En yakın fiyat: ${filteredList[0].tahliye_yeri} (Fiyat: ${filteredList[0].ucret}, Fark: ${Math.abs(filteredList[0].ucret - sefer.sirketten_alinan_ucret)})`);\n              }\n            }\n          }\n        });\n        setEslesenYerler(eslesmeYerleri);\n      }\n    } catch (error) {\n      console.error('Fiyat listesi getirme hatası:', error);\n    }\n  };\n\n  // Girilen fiyat için eşleşen tahliye yerini bul\n  const findMatchingTahliyeYeri = (sefer: Sefer, fiyat: number): string => {\n    if (!sefer.sirket) return '';\n    \n    console.log(`Eşleşme aranıyor - Şirket: ${sefer.sirket.sirket_id}, Araç: ${sefer.arac_tipi}, Fiyat: ${fiyat}`);\n    \n    // Araç tipine göre filtrelenmiş fiyat listesi\n    const filteredList = fiyatListesi.filter(\n      f => \n        f.sirket_id === sefer.sirket?.sirket_id &&\n        f.arac_tipi === sefer.arac_tipi\n    );\n    \n    // Fiyata en yakın olanı bul\n    const eslesenFiyat = filteredList.find(\n      f => Math.abs(f.ucret - fiyat) < 1.0 // Tolerans değeri\n    );\n    \n    if (eslesenFiyat) {\n      console.log(`Eşleşen fiyat bulundu: ${eslesenFiyat.tahliye_yeri} (Fiyat: ${eslesenFiyat.ucret})`);\n    } else {\n      console.log(`Eşleşen fiyat bulunamadı`);\n      // Tüm olası eşleşmeleri yazdır\n      console.log(\"Olası eşleşmeler:\");\n      filteredList.forEach(f => {\n        console.log(`  Tahliye: ${f.tahliye_yeri}, Fiyat: ${f.ucret}, Fark: ${Math.abs(f.ucret - fiyat)}`);\n      });\n    }\n    \n    return eslesenFiyat ? eslesenFiyat.tahliye_yeri : '';\n  };\n\n  // Fiyat debug butonu\n  const debugFiyatEslesmeleri = () => {\n    console.log(\"Mevcut fiyat listesi:\", fiyatListesi);\n    console.log(\"Mevcut eşleşen yerler:\", eslesenYerler);\n    \n    seferler.forEach(sefer => {\n      if (sefer.sirket) {\n        console.log(`Sefer #${sefer.sefer_id} - Şirket: ${sefer.sirket.sirket_adi}, Araç: ${sefer.arac_tipi}, Fiyat: ${sefer.sirketten_alinan_ucret}`);\n      }\n    });\n    \n    alert(\"Fiyat eşleştirme bilgileri konsola yazdırıldı. Geliştirici konsolunu kontrol edin.\");\n  };\n\n  const fiyatDegistir = (seferId: number, yeniFiyat: number, sefer: Sefer) => {\n    if (seferId && !isNaN(yeniFiyat)) {\n      // Sayısal değer olarak kaydet\n      const numericFiyat = Number(yeniFiyat);\n      console.log(`Fiyat değiştiriliyor - Sefer #${seferId}: ${sefer.sirketten_alinan_ucret} -> ${numericFiyat}`);\n      \n      // Fiyatlar state'ini güncelle\n      setYeniFiyatlar(prev => {\n        const updated = {\n          ...prev,\n          [seferId]: numericFiyat\n        };\n        \n        console.log(\"Güncel fiyatlar:\", updated);\n        return updated;\n      });\n      \n      // Yeni fiyata göre tahliye yeri eşleştirmesini güncelle\n      const eslesenYer = findMatchingTahliyeYeri(sefer, numericFiyat);\n      console.log(`Sefer #${seferId} için bulunan eşleşen yer: \"${eslesenYer}\"`);\n      \n      // Her durumda state'i güncelle (boş string bile olsa)\n      setEslesenYerler(prev => ({\n        ...prev,\n        [seferId]: eslesenYer\n      }));\n    }\n  };\n\n  // Input değişikliği işleyicisi\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>, sefer: Sefer) => {\n    const value = e.target.value;\n    const numValue = parseFloat(value);\n    \n    if (!isNaN(numValue) && numValue > 0) {\n      // Sayısal değer kontrolü\n      console.log(`Input değeri değişti: ${value}, sayısal değer: ${numValue}`);\n      fiyatDegistir(sefer.sefer_id, numValue, sefer);\n    } else {\n      // Değer boş veya geçersizse, fiyat yerini temizle\n      setYeniFiyatlar(prev => ({\n        ...prev,\n        [sefer.sefer_id]: value === '' ? 0 : numValue || 0\n      }));\n      setEslesenYerler(prev => ({\n        ...prev,\n        [sefer.sefer_id]: ''\n      }));\n    }\n  };\n\n  // Toplam fiyatı hesapla (MT * Birim Fiyat)\n  const hesaplaToplamFiyat = (sefer: Sefer, birimFiyat: number): number => {\n    // YAP-İstanbul (sirket_id=2) için birim fiyat doğrudan toplam fiyat olarak kullanılır\n    if (sefer.sirket?.sirket_id === 2) {\n      return birimFiyat;\n    }\n    \n    // Diğer şirketler için MT * Birim Fiyat formülü uygulanır\n    const mt = sefer.mt || 0;\n    return mt * birimFiyat;\n  };\n\n  // KDV hesapla (gelirin %20'si)\n  const hesaplaKDV = (gelir: number): number => {\n    return gelir * 0.20; // %20 KDV\n  };\n\n  // KDV dahil gelir hesapla\n  const hesaplaKDVDahilGelir = (sefer: Sefer, birimFiyat: number): number => {\n    const temelGelir = hesaplaToplamFiyat(sefer, birimFiyat);\n    const kdv = hesaplaKDV(temelGelir);\n    return temelGelir + kdv;\n  };\n\n  // Fiyat değişti mi kontrolü\n  const fiyatDegistiMi = (sefer: Sefer): boolean => {\n    if (!sefer || !sefer.sefer_id || yeniFiyatlar[sefer.sefer_id] === undefined) {\n      return false;\n    }\n    \n    // Doğru karşılaştırma için sayısal değerlere dönüştürme\n    const yeniFiyat = Number(yeniFiyatlar[sefer.sefer_id]);\n    const eskiFiyat = Number(sefer.sirketten_alinan_ucret);\n    \n    // Hata ayıklaması\n    console.log(`Fiyat değişimi kontrolü - Sefer #${sefer.sefer_id}: ` +\n      `Eski: ${eskiFiyat}, Yeni: ${yeniFiyat}, Değişti mi: ${Math.abs(yeniFiyat - eskiFiyat) > 0.001}`);\n    \n    // Tolerans değeri ile karşılaştırma\n    return Math.abs(yeniFiyat - eskiFiyat) > 0.001;\n  };\n\n  // Tüm fiyat değişikliklerini toplu olarak kaydet\n  const tumFiyatlariKaydet = async () => {\n    setKaydediliyor(true);\n    let basariliKayit = 0;\n    let basarisizKayit = 0;\n    \n    try {\n      // Değişiklik yapılan seferleri ve değerlerini loglayalım\n      console.log(\"Mevcut fiyatlar:\", yeniFiyatlar);\n      \n      // Değişen fiyatları bul\n      const degisiklikYapilanSeferler = seferler.filter(sefer => fiyatDegistiMi(sefer));\n      \n      console.log(`Değişiklik yapılan sefer sayısı: ${degisiklikYapilanSeferler.length}`);\n      \n      if (degisiklikYapilanSeferler.length === 0) {\n        alert('Değişiklik yapılmadı. Lütfen önce fiyat değişikliği yapınız.');\n        return;\n      }\n      \n      // Onay isteği\n      if (!window.confirm(`${degisiklikYapilanSeferler.length} adet sefer için fiyat değişikliği yapılacak. Onaylıyor musunuz?`)) {\n        return;\n      }\n      \n      // Her bir değişikliği kaydet\n      for (const sefer of degisiklikYapilanSeferler) {\n        try {\n          const yeniFiyat = yeniFiyatlar[sefer.sefer_id];\n          console.log(`Kaydediliyor - Sefer #${sefer.sefer_id}: ${sefer.sirketten_alinan_ucret} -> ${yeniFiyat}`);\n          \n          await fiyatGuncelle(sefer.sefer_id, yeniFiyat);\n          basariliKayit++;\n          \n          // Server'dan en güncel veriyi al\n          sefer.sirketten_alinan_ucret = yeniFiyat;\n        } catch (error) {\n          console.error(`Sefer #${sefer.sefer_id} fiyatı güncellenirken hata:`, error);\n          basarisizKayit++;\n        }\n      }\n      \n      // Bilgi mesajı göster\n      if (basariliKayit > 0 && basarisizKayit === 0) {\n        alert(`${basariliKayit} adet fiyat değişikliği başarıyla kaydedildi.`);\n      } else if (basariliKayit > 0 && basarisizKayit > 0) {\n        alert(`${basariliKayit} adet fiyat değişikliği kaydedildi, ${basarisizKayit} adet kayıt başarısız oldu.`);\n      } else {\n        alert('Fiyat değişiklikleri kaydedilemedi.');\n      }\n    } catch (error) {\n      console.error('Fiyatlar kaydedilirken hata:', error);\n      alert('Fiyatlar kaydedilirken bir hata oluştu');\n    } finally {\n      setKaydediliyor(false);\n    }\n  };\n\n  // Seferleri şirketlere göre gruplandır\n  const sirketGruplari = seferler.reduce((gruplar, sefer) => {\n    if (!sefer.sirket) return gruplar;\n    \n    const sirketId = sefer.sirket.sirket_id;\n    if (!gruplar[sirketId]) {\n      gruplar[sirketId] = {\n        sirket: sefer.sirket,\n        seferler: []\n      };\n    }\n    \n    gruplar[sirketId].seferler.push(sefer);\n    return gruplar;\n  }, {} as { \n    [key: number]: { \n      sirket: { sirket_id: number; sirket_adi: string }; \n      seferler: Sefer[] \n    } \n  });\n\n  // Fiyat değeri al\n  const getFiyatDegeri = (sefer: Sefer): number => {\n    if (sefer && sefer.sefer_id && yeniFiyatlar[sefer.sefer_id] !== undefined) {\n      return yeniFiyatlar[sefer.sefer_id];\n    }\n    return sefer ? sefer.sirketten_alinan_ucret : 0;\n  };\n  \n  // Şirket bazında toplam tutarı hesapla\n  const hesaplaSirketToplami = (seferler: Sefer[]): number => {\n    return seferler.reduce((toplam, sefer) => {\n      const birimFiyat = getFiyatDegeri(sefer);\n      const normalFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n      return toplam + normalFiyat;\n    }, 0);\n  };\n  \n  // Genel toplam tutarı hesapla\n  const genelToplamTutar = seferler.reduce((toplam, sefer) => {\n    const birimFiyat = getFiyatDegeri(sefer);\n    const normalFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n    return toplam + normalFiyat;\n  }, 0);\n\n  // Genel toplam KDV hesapla\n  const genelToplamKDV = seferler.reduce((toplam, sefer) => {\n    const birimFiyat = getFiyatDegeri(sefer);\n    const normalFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n    const kdv = hesaplaKDV(normalFiyat);\n    return toplam + kdv;\n  }, 0);\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"mb-4 flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-xl font-semibold\">Toplam Tutar: {genelToplamTutar.toLocaleString('tr-TR')} TL</h2>\n          <p className=\"text-sm text-gray-600\">KDV (%20): {genelToplamKDV.toLocaleString('tr-TR')} TL</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={debugFiyatEslesmeleri}\n            className=\"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\n          >\n            Fiyat Debug\n          </button>\n          <button\n            onClick={tumFiyatlariKaydet}\n            disabled={kaydediliyor}\n            className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-400\"\n          >\n            {kaydediliyor ? 'Kaydediliyor...' : 'Tüm Değişiklikleri Kaydet'}\n          </button>\n        </div>\n      </div>\n      \n      {Object.values(sirketGruplari).map((grup) => {\n        // Her grup için seferleri sıra numarasına göre sırala\n        const siraliSeferler = siralamaYap(grup.seferler);\n        \n        return (\n        <div key={grup.sirket.sirket_id} className=\"mb-8\">\n          <div className=\"bg-gray-100 p-4 rounded-t-lg border border-gray-300\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-semibold\">\n                {grup.sirket.sirket_adi}\n                {grup.sirket.sirket_id === 2 && \n                  <span className=\"text-sm ml-2 font-normal text-red-600\">\n                    (Bu şirket için birim fiyat = toplam fiyat)\n                  </span>\n                }\n              </h3>\n              <div className=\"text-right\">\n                <span className=\"font-medium\">\n                  Toplam: {hesaplaSirketToplami(grup.seferler).toLocaleString('tr-TR')} TL\n                </span>\n                <div className=\"text-sm text-gray-600\">\n                  KDV: {grup.seferler.reduce((toplam, sefer) => {\n                    const birimFiyat = getFiyatDegeri(sefer);\n                    const normalFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n                    const kdv = hesaplaKDV(normalFiyat);\n                    return toplam + kdv;\n                  }, 0).toLocaleString('tr-TR')} TL\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border border-t-0\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"py-2 px-3 border text-left w-16\">Sıra No</th>\n                  <th className=\"py-2 px-3 border text-left\">Araç/Şoför</th>\n                  <th className=\"py-2 px-3 border text-left\">İrsaliye No</th>\n                  <th className=\"py-2 px-3 border text-left\">İrsaliye Tarihi</th>\n                  <th className=\"py-2 px-3 border text-left\">Çıkış Yeri</th>\n                  <th className=\"py-2 px-3 border text-left w-40\">Tahliye Edilen Firma</th>\n                  <th className=\"py-2 px-3 border text-left\">Tahliye Yeri</th>\n                  <th className=\"py-2 px-3 border text-left\">MT</th>\n                  <th className=\"py-2 px-3 border text-left\">Araç Tipi</th>\n                  <th className=\"py-2 px-3 border text-left w-32\">\n                    {grup.sirket.sirket_id === 2 ? 'Toplam Fiyat (TL)' : 'Birim Fiyat (TL)'}\n                  </th>\n                  <th className=\"py-2 px-3 border text-left\">\n                    {grup.sirket.sirket_id === 2 ? 'Toplam Fiyat (TL)' : 'Fiyat (TL)'}\n                  </th>\n                  <th className=\"py-2 px-3 border text-left\">Fiyat Yeri</th>\n                </tr>\n              </thead>\n              <tbody>\n                {siraliSeferler.map((sefer) => sefer && (\n                  <tr key={sefer.sefer_id} className=\"hover:bg-gray-50\">\n                    <td className=\"py-2 px-3 border w-16\">{sefer.sira_no}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.arac ? `${sefer.arac.sofor_adi}` : '-'}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.irsaliye_numarasi || '-'}</td>\n                    <td className=\"py-2 px-3 border\">\n                      {sefer.irsaliye_tarihi ? new Date(sefer.irsaliye_tarihi).toLocaleDateString('tr-TR') : '-'}\n                    </td>\n                    <td className=\"py-2 px-3 border\">{sefer.cikis_yeri}</td>\n                    <td className=\"py-2 px-3 border w-40\">{sefer.tahliye_edilen_firma}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.tahliye_yeri}</td>\n                    <td className=\"py-2 px-3 border\">\n                      {sefer.sirket?.sirket_id === 2 ? \n                        <span className=\"text-xs text-gray-500\">(Kullanılmıyor)</span> : \n                        (sefer.mt !== undefined ? sefer.mt : '-')\n                      }\n                    </td>\n                    <td className=\"py-2 px-3 border\">{sefer.arac_tipi}</td>\n                    <td className=\"py-2 px-3 border w-32\">\n                      <input\n                        type=\"number\"\n                        className={`w-full p-1 border rounded ${fiyatDegistiMi(sefer) ? 'bg-yellow-50 border-yellow-500' : ''}`}\n                        value={getFiyatDegeri(sefer)}\n                        onChange={(e) => handleInputChange(e, sefer)}\n                      />\n                    </td>\n                    <td className=\"py-2 px-3 border font-medium\">\n                      {hesaplaToplamFiyat(sefer, getFiyatDegeri(sefer)).toLocaleString('tr-TR')}\n                    </td>\n                    <td className=\"py-2 px-3 border font-medium text-green-600\">\n                      {eslesenYerler[sefer.sefer_id] || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SeferlerTablosu; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sirket-fiyat-fatura/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport Sidebar from '../components/Sidebar';\nimport { useTheme } from '../context/ThemeContext';\nimport DonemSecimi from './components/DonemSecimi';\nimport SeferlerTablosu from './components/SeferlerTablosu';\n\nexport default function SirketFiyatFatura() {\n  const { theme } = useTheme();\n  const [secilenAy, setSecilenAy] = useState<number | null>(null);\n  const [secilenDonem, setSecilenDonem] = useState<number | null>(null);\n  const [yuklemeDurumu, setYuklemeDurumu] = useState<boolean>(false);\n  const [seferler, setSeferler] = useState<any[]>([]);\n\n  // Seferleri getir\n  const seferleriGetir = async () => {\n    if (!secilenAy || !secilenDonem) {\n      alert('Lütfen ay ve dönem seçiniz');\n      return;\n    }\n    \n    setYuklemeDurumu(true);\n    \n    try {\n      const response = await fetch(`/api/seferler/tumunu-listele?ay=${secilenAy}&donem=${secilenDonem}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        setSeferler(data);\n      } else {\n        alert('Seferler yüklenirken bir hata oluştu');\n      }\n    } catch (error) {\n      console.error('Seferler yüklenirken hata:', error);\n      alert('Seferler yüklenirken bir hata oluştu');\n    } finally {\n      setYuklemeDurumu(false);\n    }\n  };\n\n  const fiyatGuncelle = async (seferId: number, yeniFiyat: number) => {\n    try {\n      console.log(`API'ye gönderiliyor - Sefer ID: ${seferId}, Yeni Fiyat: ${yeniFiyat}`);\n\n      const response = await fetch('/api/seferler/fiyat-guncelle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seferId,\n          sirketten_alinan_ucret: yeniFiyat\n        }),\n      });\n      \n      const responseData = await response.json();\n      console.log('API yanıtı:', responseData);\n      \n      if (response.ok) {\n        console.log(`Fiyat başarıyla güncellendi: Sefer #${seferId} - Yeni fiyat: ${yeniFiyat}`);\n        // Başarılı güncelleme sonrası seferleri yeniden yükle\n        seferleriGetir();\n      } else {\n        console.error('Fiyat güncelleme hatası:', responseData);\n        alert(`Fiyat güncellenirken bir hata oluştu: ${responseData.error || 'Bilinmeyen hata'}`);\n      }\n    } catch (error) {\n      console.error('Fiyat güncellenirken hata:', error);\n      alert('Fiyat güncellenirken bir hata oluştu');\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-[var(--background)] text-[var(--foreground)]\">\n      {/* Sol kenar menüsü */}\n      <Sidebar />\n\n      {/* Ana içerik alanı */}\n      <div className=\"flex-1 p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-6\">Şirket İçin Fiyat - Fatura</h1>\n          \n          <div className=\"bg-[var(--card-bg)] rounded-lg shadow-md p-6 mb-8 border border-[var(--card-border)]\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"md:col-span-2\">\n                <DonemSecimi \n                  secilenAy={secilenAy} \n                  setSecilenAy={setSecilenAy}\n                  secilenDonem={secilenDonem}\n                  setSecilenDonem={setSecilenDonem}\n                />\n              </div>\n              \n              <div className=\"flex items-end\">\n                <button\n                  onClick={seferleriGetir}\n                  disabled={yuklemeDurumu}\n                  className=\"w-full p-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400\"\n                >\n                  {yuklemeDurumu ? 'Yükleniyor...' : 'Seferleri Getir'}\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {seferler.length > 0 ? (\n            <SeferlerTablosu seferler={seferler} fiyatGuncelle={fiyatGuncelle} />\n          ) : (\n            <div className=\"bg-[var(--card-bg)] rounded-lg shadow-md p-6 border border-[var(--card-border)] text-center\">\n              <p className=\"text-gray-500\">Seçilen kriterlere uygun sefer bulunamadı.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AACA;AACA;AARA;;;;;;;AAUe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAElD,kBAAkB;IAClB,MAAM,iBAAiB;QACrB,IAAI,CAAC,aAAa,CAAC,cAAc;YAC/B,MAAM;YACN;QACF;QAEA,iBAAiB;QAEjB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,gCAAgC,EAAE,UAAU,OAAO,EAAE,cAAc;YAEjG,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,YAAY;YACd,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,gBAAgB,OAAO,SAAiB;QAC5C,IAAI;YACF,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,QAAQ,cAAc,EAAE,WAAW;YAElF,MAAM,WAAW,MAAM,MAAM,gCAAgC;gBAC3D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,wBAAwB;gBAC1B;YACF;YAEA,MAAM,eAAe,MAAM,SAAS,IAAI;YACxC,QAAQ,GAAG,CAAC,eAAe;YAE3B,IAAI,SAAS,EAAE,EAAE;gBACf,QAAQ,GAAG,CAAC,CAAC,oCAAoC,EAAE,QAAQ,eAAe,EAAE,WAAW;gBACvF,sDAAsD;gBACtD;YACF,OAAO;gBACL,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,MAAM,CAAC,sCAAsC,EAAE,aAAa,KAAK,IAAI,mBAAmB;YAC1F;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,oIAAA,CAAA,UAAO;;;;;0BAGR,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCAExC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,qKAAA,CAAA,UAAW;4CACV,WAAW;4CACX,cAAc;4CACd,cAAc;4CACd,iBAAiB;;;;;;;;;;;kDAIrB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CACC,SAAS;4CACT,UAAU;4CACV,WAAU;sDAET,gBAAgB,kBAAkB;;;;;;;;;;;;;;;;;;;;;;wBAM1C,SAAS,MAAM,GAAG,kBACjB,8OAAC,yKAAA,CAAA,UAAe;4BAAC,UAAU;4BAAU,eAAe;;;;;iDAEpD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3C","debugId":null}}]
}