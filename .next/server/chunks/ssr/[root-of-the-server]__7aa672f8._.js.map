{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/components/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useAuth } from '../context/AuthContext';\nimport { LogOut } from 'lucide-react';\n\nconst Sidebar = () => {\n  const pathname = usePathname();\n  const router = useRouter();\n  const { logout } = useAuth();\n\n  const handleLogout = () => {\n    logout();\n    router.push('/login');\n  };\n\n  const menuItems = [\n    {\n      href: '/',\n      label: 'Dashboard',\n      isActive: pathname === '/'\n    },\n    {\n      href: '/veri-yukle',\n      label: 'Veri Yükle',\n      isActive: pathname === '/veri-yukle'\n    },\n    {\n      href: '/sirket-fiyat-fatura',\n      label: 'Şirket İçin Fiyat - Fatura',\n      isActive: pathname === '/sirket-fiyat-fatura'\n    },\n    {\n      href: '/sofor-fiyat-fatura',\n      label: 'Şöför İçin Fiyat - Fatura',\n      isActive: pathname === '/sofor-fiyat-fatura'\n    },\n    {\n      href: '/sirket-bilanco',\n      label: 'Şirket Bilanço',\n      isActive: pathname === '/sirket-bilanco'\n    },\n    {\n      href: '/sofor-bilanco',\n      label: 'Şöför Bilanço',\n      isActive: pathname === '/sofor-bilanco'\n    },\n    {\n      href: '/cek-yonetimi',\n      label: 'Çek Yönetimi',\n      isActive: pathname === '/cek-yonetimi'\n    },\n    {\n      href: '/veritabani-yonetimi',\n      label: 'Veritabanı Yönetimi',\n      isActive: pathname === '/veritabani-yonetimi'\n    },\n    {\n      href: '/eski-veri-yukle',\n      label: 'Eski Veri Yükle',\n      isActive: pathname === '/eski-veri-yukle'\n    },\n    {\n      href: '/fatura-excel',\n      label: 'Fatura Excel',\n      isActive: pathname === '/fatura-excel'\n    }\n  ];\n\n  return (\n    <div className=\"w-64 min-w-64 flex-shrink-0 bg-white shadow-lg\">\n      <div className=\"p-6\">\n        <div className=\"space-y-2\">\n          {menuItems.map((item, index) => (\n            <Link\n              key={item.href}\n              href={item.href}\n              className={`block w-full p-3 text-center rounded-lg font-medium transition-colors ${\n                item.isActive\n                  ? 'bg-blue-600 text-white'\n                  : 'border border-gray-200 text-gray-700 hover:bg-gray-50'\n              } ${\n                // Grup ayırıcıları için boşluk ekle\n                (index === 1 || index === 4 || index === 7) ? 'mt-6' : ''\n              }`}\n            >\n              {item.label}\n            </Link>\n          ))}\n          \n          {/* Logout Button */}\n          <button\n            onClick={handleLogout}\n            className=\"block w-full p-3 mt-8 text-center rounded-lg font-medium transition-colors border border-red-200 text-red-600 hover:bg-red-50 flex items-center justify-center gap-2\"\n          >\n            <LogOut className=\"w-4 h-4\" />\n            Çıkış Yap\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,UAAU;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAEzB,MAAM,eAAe;QACnB;QACA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,YAAY;QAChB;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;oBACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,8OAAC,4JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,sEAAsE,EAChF,KAAK,QAAQ,GACT,2BACA,wDACL,CAAC,EACA,oCAAoC;4BACnC,UAAU,KAAK,UAAU,KAAK,UAAU,IAAK,SAAS,IACvD;sCAED,KAAK,KAAK;2BAXN,KAAK,IAAI;;;;;kCAgBlB,8OAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,8OAAC,0MAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;;;;;AAO1C;uCAEe","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/veri-yukle/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, ChangeEvent, FormEvent, DragEvent } from 'react';\nimport Link from 'next/link';\nimport Sidebar from '../components/Sidebar';\nimport { useTheme } from '../context/ThemeContext';\nimport * as XLSX from 'xlsx';\n\nexport default function VeriYukle() {\n  const { theme } = useTheme();\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [isFileSelected, setIsFileSelected] = useState(false);\n  const [excelDataBySirket, setExcelDataBySirket] = useState<{[key: string]: any[]}>({});\n  const [showData, setShowData] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [sirketler, setSirketler] = useState<{[key: string]: {id: string, ad: string}}>({});\n  const [sirketlerYukleniyor, setSirketlerYukleniyor] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Veritabanından şirket bilgilerini çekme\n  useEffect(() => {\n    const fetchSirketler = async () => {\n      try {\n        setSirketlerYukleniyor(true);\n        const response = await fetch('/api/sirketler');\n        \n        if (!response.ok) {\n          throw new Error('Şirket verileri çekilemedi');\n        }\n        \n        const data = await response.json();\n        console.log('API Yanıtı:', JSON.stringify(data));\n        \n        // Şirketleri ID'ye göre map'leyelim\n        const sirketMap: {[key: string]: {id: string, ad: string}} = {};\n        data.forEach((sirket: any) => {\n          console.log('Şirket verisi:', JSON.stringify(sirket));\n          \n          // API'den gelen şirket ID'si muhtemelen sayı olarak gelecek\n          // Ama biz string key kullanıyoruz, o yüzden string'e dönüştürelim\n          const sirketId = String(sirket.sirket_id);\n          \n          sirketMap[sirketId] = {\n            id: sirketId,\n            ad: sirket.sirket_adi || `Şirket ${sirketId}`\n          };\n        });\n        \n        console.log('Oluşturulan şirket haritası:', sirketMap);\n        setSirketler(sirketMap);\n      } catch (error) {\n        console.error('Şirket verileri çekilirken hata oluştu:', error);\n        \n        // Hata durumunda varsayılan şirket isimleri kullanılacak\n        setSirketler({\n          '1': { id: '1', ad: 'Şirket 1' },\n          '2': { id: '2', ad: 'Şirket 2' },\n          '3': { id: '3', ad: 'Şirket 3' }\n        });\n      } finally {\n        setSirketlerYukleniyor(false);\n      }\n    };\n    \n    fetchSirketler();\n  }, []);\n\n  const months = [\n    'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',\n    'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\n  ];\n\n  const periods = [\n    { id: '1', name: '1-10' },\n    { id: '2', name: '11-20' },\n    { id: '3', name: '21-Ay Sonu' }\n  ];\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setFileName(e.target.files[0].name);\n      setIsFileSelected(true);\n      setShowData(false); // Yeni dosya seçildiğinde veri görüntüsünü sıfırla\n    } else {\n      setFileName('');\n      setIsFileSelected(false);\n      setShowData(false);\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (!isFileSelected || !fileInputRef.current?.files?.[0]) {\n      alert('Lütfen bir dosya seçin');\n      return;\n    }\n    \n    const file = fileInputRef.current.files[0];\n    const reader = new FileReader();\n    \n    reader.onload = (evt) => {\n      try {\n        if (!evt.target?.result) return;\n        \n        const binaryStr = evt.target.result;\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        \n        // Her şirket için ayrı veriler\n        const dataGroupedBySirket: {[key: string]: any[]} = {};\n        \n        // Her sayfa için döngü\n        workbook.SheetNames.forEach((sheetName, sheetIndex) => {\n          // Sayfa indeksine göre şirket id'sini belirle (1-tabanlı)\n          const sirketId = String(sheetIndex + 1);\n          \n          const worksheet = workbook.Sheets[sheetName];\n          const rawData = XLSX.utils.sheet_to_json(worksheet, { defval: null });\n          \n          // Her satıra şirket id'si ekle\n          const dataWithCompanyId = rawData.map((row: any) => ({\n            ...row,\n            sirket_id: sirketId\n          }));\n          \n          // Verileri şirket ID'sine göre gruplandır\n          const processedData = processExcelData(dataWithCompanyId);\n          \n          // Şirket ID'sine göre veri kaydet\n          dataGroupedBySirket[sirketId] = processedData;\n        });\n        \n        setExcelDataBySirket(dataGroupedBySirket);\n        setShowData(true);\n      } catch (error) {\n        console.error('Excel dosyası okunurken hata oluştu:', error);\n        alert('Excel dosyası okunurken bir hata oluştu.');\n      }\n    };\n    \n    reader.readAsBinaryString(file);\n  };\n\n  const browseFile = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleDragOver = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      \n      // Excel dosyası kontrolü\n      if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n          file.type === 'application/vnd.ms-excel') {\n        \n        // fileInputRef'i güncelle ki handleSubmit fonksiyonu bu dosyayı okuyabilsin\n        const dataTransfer = new DataTransfer();\n        dataTransfer.items.add(file);\n        \n        if (fileInputRef.current) {\n          fileInputRef.current.files = dataTransfer.files;\n        }\n        \n        setFileName(file.name);\n        setIsFileSelected(true);\n        setShowData(false);\n        \n        // Otomatik olarak dosyayı görüntüle\n        const reader = new FileReader();\n        \n        reader.onload = (evt) => {\n          try {\n            if (!evt.target?.result) return;\n            \n            const binaryStr = evt.target.result;\n            const workbook = XLSX.read(binaryStr, { type: 'binary' });\n            \n            // Her şirket için ayrı veriler\n            const dataGroupedBySirket: {[key: string]: any[]} = {};\n            \n            // Her sayfa için döngü\n            workbook.SheetNames.forEach((sheetName, sheetIndex) => {\n              // Sayfa indeksine göre şirket id'sini belirle (1-tabanlı)\n              const sirketId = String(sheetIndex + 1);\n              \n              const worksheet = workbook.Sheets[sheetName];\n              const rawData = XLSX.utils.sheet_to_json(worksheet, { defval: null });\n              \n              // Her satıra şirket id'si ekle\n              const dataWithCompanyId = rawData.map((row: any) => ({\n                ...row,\n                sirket_id: sirketId\n              }));\n              \n              // Verileri şirket ID'sine göre gruplandır\n              const processedData = processExcelData(dataWithCompanyId);\n              \n              // Şirket ID'sine göre veri kaydet\n              dataGroupedBySirket[sirketId] = processedData;\n            });\n            \n            setExcelDataBySirket(dataGroupedBySirket);\n            setShowData(true);\n          } catch (error) {\n            console.error('Excel dosyası okunurken hata oluştu:', error);\n            alert('Excel dosyası okunurken bir hata oluştu.');\n          }\n        };\n        \n        reader.readAsBinaryString(file);\n      } else {\n        alert('Lütfen sadece Excel dosyası (.xlsx veya .xls) yükleyin');\n      }\n    }\n  };\n\n  // Excel verilerini seferlere göre işleme fonksiyonu\n  const processExcelData = (rawData: any[]) => {\n    const seferler: any[] = [];\n    let currentSefer: any = null;\n    \n    rawData.forEach((row) => {\n      // Sıra No sütunu varsa ve değeri dolu ise, yeni sefer başlat\n      // Excel dosyasındaki ilk sütunun adını dinamik olarak alıyoruz\n      // Örneğin \"Sıra No\" veya \"1\" gibi olabilir\n      const firstColumnKey = Object.keys(row)[0];\n      \n      if (row[firstColumnKey] !== null && row[firstColumnKey] !== undefined && row[firstColumnKey] !== '') {\n        // Yeni sefer\n        if (currentSefer) {\n          seferler.push(currentSefer);\n        }\n        \n        // ÖNEMLİ: tumVeriler, Excel'deki ham verileri doğrudan içeren bir objedir\n        // Değerleri birleştirme veya manipüle etme işlemi yapılmıyor\n        currentSefer = {\n          seferNo: row[firstColumnKey],\n          duraklar: [row],\n          tumVeriler: { ...row } // Ham verilerin tam kopyası\n        };\n        \n        // Debug log\n        console.log('Yeni sefer oluşturuldu:', currentSefer.seferNo, 'İlk değerler:', Object.keys(currentSefer.tumVeriler).map(k => `${k}: ${currentSefer.tumVeriler[k]}`));\n      } else if (currentSefer) {\n        // Mevcut sefere yeni durak ekle\n        currentSefer.duraklar.push(row);\n        \n        // ÖNEMLİ: Eğer durakta boş olmayan değerler varsa, bunları tumVeriler'e ekle\n        // Ancak var olan değerleri ASLA değiştirme - bu kritik!\n        Object.keys(row).forEach(key => {\n          if (row[key] !== null && row[key] !== undefined && row[key] !== '') {\n            // Önceki değer var mı kontrol et\n            if (currentSefer.tumVeriler[key] === undefined || \n                currentSefer.tumVeriler[key] === null || \n                currentSefer.tumVeriler[key] === '') {\n              // Önceki değer yoksa yeni değeri ekle\n              currentSefer.tumVeriler[key] = row[key];\n              console.log(`Yeni durak için \"${key}\" değeri eklendi:`, row[key]);\n            } else {\n              // Önceki değer varsa, aynı değer mi kontrol et\n              if (String(currentSefer.tumVeriler[key]) !== String(row[key])) {\n                console.log(`UYARI: Durak için \"${key}\" değeri farklı:`, \n                            `Önceki: \"${currentSefer.tumVeriler[key]}\", `, \n                            `Yeni: \"${row[key]}\"`);\n                \n                // İki değeri birleştir - aralarına \" - \" ekle\n                if (!String(currentSefer.tumVeriler[key]).includes(String(row[key]))) {\n                  const combinedValue = `${currentSefer.tumVeriler[key]} - ${row[key]}`;\n                  console.log(`İki değer birleştiriliyor: \"${combinedValue}\"`);\n                  currentSefer.tumVeriler[key] = combinedValue;\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n    \n    // Son seferi ekle\n    if (currentSefer) {\n      seferler.push(currentSefer);\n    }\n    \n    return seferler;\n  };\n\n  // Bir tablo için sütun verilerini getirme fonksiyonu\n  const getColumnValue = (sefer: any, columnName: string) => {\n    // İrsaliye Tarihi için özel işlem\n    if (columnName === 'İrsaliye Tarihi') {\n      // Öncelikle Excel'deki orijinal veriyi kontrol et\n      let tarihDegeri = '';\n      \n      if (sefer.tumVeriler && sefer.tumVeriler[columnName] !== undefined && \n          sefer.tumVeriler[columnName] !== null && \n          sefer.tumVeriler[columnName] !== '') {\n        tarihDegeri = sefer.tumVeriler[columnName];\n      } else {\n        // Kısmı eşleşme için (başlık farklı olabilir)\n        const matchingKey = Object.keys(sefer.tumVeriler || {}).find(k => \n          k.toLowerCase().includes(columnName.toLowerCase())\n        );\n        \n        if (matchingKey && sefer.tumVeriler[matchingKey] !== null && \n            sefer.tumVeriler[matchingKey] !== undefined && \n            sefer.tumVeriler[matchingKey] !== '') {\n          tarihDegeri = sefer.tumVeriler[matchingKey];\n        }\n      }\n      \n      // Eğer tarih değeri varsa, GG AA YYYY formatına çevir\n      if (tarihDegeri) {\n        try {\n          // Tarih formatını kontrol et ve dönüştür\n          const cleanDateStr = tarihDegeri.toString().trim();\n          \n          // Nokta veya slash ile ayrılmış tarih formatı\n          const dateParts = cleanDateStr.split(/[\\/\\.]/);\n          if (dateParts.length >= 3) {\n            const day = parseInt(dateParts[0], 10);\n            const month = parseInt(dateParts[1], 10);\n            let year = parseInt(dateParts[2], 10);\n            \n            // 2 haneli yıl kontrolü\n            if (year < 100) {\n              year += 2000; // 23 -> 2023\n            }\n            \n            // Geçerli tarih değerleri kontrolü\n            if (!isNaN(day) && !isNaN(month) && !isNaN(year) && \n                day >= 1 && day <= 31 && month >= 1 && month <= 12) {\n              // GG AA YYYY formatına dönüştür\n              return `${day < 10 ? '0' + day : day} ${month < 10 ? '0' + month : month} ${year}`;\n            }\n          }\n          \n          // Eğer dönüştürme yapılamazsa, orijinal değeri döndür\n          return tarihDegeri;\n        } catch (e) {\n          console.error('Tarih dönüştürme hatası:', e);\n          return tarihDegeri;\n        }\n      }\n      \n      return '';\n    }\n    \n    // Diğer sütunlar için normal işlem\n    // Öncelikle Excel'deki orijinal veriyi kontrol et\n    if (sefer.tumVeriler && sefer.tumVeriler[columnName] !== undefined && \n        sefer.tumVeriler[columnName] !== null && \n        sefer.tumVeriler[columnName] !== '') {\n      return sefer.tumVeriler[columnName];\n    }\n    \n    // Kısmı eşleşme için (başlık farklı olabilir)\n    const matchingKey = Object.keys(sefer.tumVeriler || {}).find(k => \n      k.toLowerCase().includes(columnName.toLowerCase())\n    );\n    \n    if (matchingKey && sefer.tumVeriler[matchingKey] !== null && \n        sefer.tumVeriler[matchingKey] !== undefined && \n        sefer.tumVeriler[matchingKey] !== '') {\n      return sefer.tumVeriler[matchingKey];\n    }\n    \n    return '';\n  };\n\n  // Şirket adını ID'den alma fonksiyonu\n  const getSirketAdi = (sirketId: string) => {\n    console.log('getSirketAdi çağrıldı. ID:', sirketId, 'Mevcut şirketler:', sirketler);\n    \n    // ID'yi sayıya çevir çünkü veritabanımızda ID'ler sayı olarak saklanıyor\n    const numericId = Number(sirketId);\n    \n    // Şirket bilgilerini kontrol et\n    if (sirketler[sirketId]) {\n      const sirketAdi = sirketler[sirketId].ad;\n      console.log(`ID ${sirketId} için şirket adı:`, sirketAdi);\n      return sirketAdi;\n    }\n    \n    console.log(`ID ${sirketId} için şirket bilgisi bulunamadı`);\n    return `Şirket ${sirketId}`;\n  };\n\n  // Tablo oluşturma komponenti\n  const TableForCompany = ({ sirketId, data }: { sirketId: string, data: any[] }) => {\n    // Şirket adını al ve kontrol et\n    const sirketAdi = getSirketAdi(sirketId);\n    console.log(`TableForCompany: sirketId=${sirketId}, sirketAdi=${sirketAdi}`);\n    \n    return (\n      <div className=\"bg-[var(--card-bg)] p-6 rounded-lg border border-[var(--card-border)] w-full mb-8\">\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">{sirketAdi}</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full bg-[var(--card-bg)] border border-[var(--nav-border)] rounded-lg\">\n            <thead>\n              <tr className=\"bg-[var(--nav-bg)]\">\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-16\">Sıra No</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-28\">İrsaliye Numarası</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-56\">İrsaliye Tarihi</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-24\">Kalkış Saati</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-24\">Varış Saati</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-32\">Şoför</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-32\">Çıkış Yeri</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-40\">Tahliye Edilen Firma</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-32\">Tahliye Yeri/Fırın</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-24\">Tonaj/Kg</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-28\">Araç Tipi Tlr/K.Ayak</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-16\">MT</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-24\">Ton/Fiyat</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-24\">Taşıma Fiyatı</th>\n                <th className=\"px-4 py-2 text-left border-b border-[var(--nav-border)] w-32\">Açıklama</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((sefer, index) => {\n                // İlk sütun (Sıra No) her zaman sefer numarası olacak\n                const siraNo = sefer.seferNo;\n                \n                return (\n                  <tr key={index} className={index % 2 === 0 ? 'bg-[var(--background)]' : ''}>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{siraNo}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'İrsaliye Numarası')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-nowrap\">{getColumnValue(sefer, 'İrsaliye Tarihi')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Kalkış Saati')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Varış Saati')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Şoför')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Çıkış Yeri')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Tahliye Edilen Firma')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Tahliye Yeri/Fırın')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Tonaj/Kg')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Araç Tipi Tlr/K.Ayak')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'MT')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Ton/Fiyat')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Taşıma Fiyatı')}</td>\n                    <td className=\"px-4 py-2 border-b border-[var(--nav-border)] whitespace-normal\">{getColumnValue(sefer, 'Açıklama')}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  // Verileri kaydetme fonksiyonu\n  const handleSaveData = async () => {\n    if (!selectedMonth || !selectedPeriod) {\n      alert('Lütfen ay ve dönem seçin');\n      return;\n    }\n    \n    // Ay indeksini bulalım (1-12 arası)\n    const months = [\n      'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',\n      'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\n    ];\n    const ayIndex = months.indexOf(selectedMonth) + 1; // 1-12 arası\n    \n    // Dönem değerini hesaplayalım (1-3 arası)\n    let donemValue = 0;\n    switch (selectedPeriod) {\n      case '1-10':\n        donemValue = 1;\n        break;\n      case '11-20':\n        donemValue = 2;\n        break;\n      case '21-Ay Sonu':\n        donemValue = 3;\n        break;\n      default:\n        donemValue = 0;\n    }\n    \n    // Kaydetmeden önce son kontrol\n    if (ayIndex < 1 || donemValue < 1) {\n      alert('Geçersiz ay veya dönem seçimi');\n      return;\n    }\n    \n    try {\n      setIsSaving(true);\n      \n      // Veri kontrolü ve debug\n      console.log('Excel verilerini kontrol ediyorum...');\n      \n      // Tüm verilerin doğru formatını sağla\n      const optimizedData: {[key: string]: any[]} = {};\n      \n      // Her şirket için\n      Object.entries(excelDataBySirket).forEach(([sirketId, seferler]) => {\n        optimizedData[sirketId] = seferler.map(sefer => {\n          // tumVeriler doğrudan kullan, durakları birleştirme işlemine gerek yok\n          // böylece Excel'deki orijinal değerler korunacak\n          return {\n            seferNo: sefer.seferNo,\n            tumVeriler: sefer.tumVeriler\n          };\n        });\n      });\n      \n      // Debug log\n      console.log('API\\'ye gönderilecek veri örneği:', \n        Object.keys(optimizedData).length > 0 ? \n        JSON.stringify(optimizedData[Object.keys(optimizedData)[0]][0]) : \n        'Veri yok');\n      \n      // Excel verilerini API'ye gönder\n      const response = await fetch('/api/seferler/kaydet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ay: ayIndex,\n          donem: donemValue,\n          seferler: optimizedData // Burada optimizedData kullanıyoruz\n        }),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Veriler kaydedilirken bir hata oluştu');\n      }\n      \n      const result = await response.json();\n      alert('Veriler başarıyla kaydedildi! Toplam ' + result.kaydedilenSeferSayisi + ' sefer kaydedildi.');\n      \n      // Başarılı kayıttan sonra formu sıfırla\n      setShowData(false);\n      setIsFileSelected(false);\n      setFileName('');\n      setExcelDataBySirket({});\n      setSelectedMonth('');\n      setSelectedPeriod('');\n      \n    } catch (error: any) {\n      console.error('Veri kaydetme hatası:', error);\n      alert('Veriler kaydedilirken bir hata oluştu: ' + error.message);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-[var(--background)] text-[var(--foreground)]\">\n      {/* Sol kenar menüsü */}\n      <Sidebar />\n      \n      {/* Ana içerik alanı */}\n      <div className=\"flex-1 p-10 relative\">\n        {/* Tema değiştirme butonu - sağ üst köşe */}\n        <div className=\"absolute top-4 right-6\">\n          <Link href=\"/\" className=\"text-sm text-[var(--foreground)] opacity-60 hover:opacity-100\">\n            Ana Sayfa\n          </Link>\n        </div>\n        \n        <h1 className=\"text-2xl font-bold mb-8\">Veri Yükleme</h1>\n        \n        {!showData ? (\n          // Dosya yükleme alanı - sadece veriler gösterilmediğinde\n          <div className=\"bg-[var(--card-bg)] p-6 rounded-lg border border-[var(--card-border)] max-w-3xl mb-6\">\n            <div \n              className=\"border-2 border-dashed border-[var(--nav-border)] rounded-lg p-8 text-center\"\n              onDragOver={handleDragOver}\n              onDrop={handleDrop}\n            >\n              <input\n                type=\"file\"\n                id=\"fileUpload\"\n                ref={fileInputRef}\n                className=\"hidden\"\n                accept=\".xlsx,.xls\"\n                onChange={handleFileChange}\n                required\n              />\n              \n              {!isFileSelected ? (\n                <div>\n                  <p className=\"mb-4\">Excel dosyanızı buraya sürükleyin veya yükleyin</p>\n                  <button\n                    type=\"button\"\n                    onClick={browseFile}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    Dosya Seç\n                  </button>\n                  <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\n                    (Sadece .xlsx veya .xls uzantılı dosyalar)\n                  </p>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"flex items-center mb-4\">\n                    <svg className=\"w-8 h-8 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                    <span>{fileName}</span>\n                  </div>\n                  <div className=\"flex space-x-3\">\n                    <button\n                      type=\"button\"\n                      onClick={browseFile}\n                      className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600\"\n                    >\n                      Dosyayı Değiştir\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        if (fileInputRef.current?.files?.[0]) {\n                          const e = { preventDefault: () => {} } as FormEvent<HTMLFormElement>;\n                          handleSubmit(e);\n                        } else {\n                          alert('Lütfen bir dosya seçin');\n                        }\n                      }}\n                      className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium\"\n                    >\n                      Dosyayı Görüntüle\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          // Dönem seçimi ve veriler - sadece veriler gösterildiğinde\n          <div>\n            <div className=\"bg-[var(--card-bg)] p-6 rounded-lg border border-[var(--card-border)] max-w-3xl mb-6\">\n              <h2 className=\"text-xl font-medium mb-4\">Dönem Seçimi</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label htmlFor=\"month\" className=\"block mb-2 text-sm font-medium\">\n                    Ay Seçin\n                  </label>\n                  <select\n                    id=\"month\"\n                    className=\"w-full p-3 border border-[var(--nav-border)] rounded-lg bg-[var(--background)] focus:ring-2 focus:ring-blue-500\"\n                    value={selectedMonth}\n                    onChange={(e) => setSelectedMonth(e.target.value)}\n                  >\n                    <option value=\"\">Ay Seçin</option>\n                    {months.map((month, index) => (\n                      <option key={index} value={month}>\n                        {month}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"period\" className=\"block mb-2 text-sm font-medium\">\n                    Dönem Seçin\n                  </label>\n                  <select\n                    id=\"period\"\n                    className=\"w-full p-3 border border-[var(--nav-border)] rounded-lg bg-[var(--background)] focus:ring-2 focus:ring-blue-500\"\n                    value={selectedPeriod}\n                    onChange={(e) => setSelectedPeriod(e.target.value)}\n                  >\n                    <option value=\"\">Dönem Seçin</option>\n                    {periods.map((period) => (\n                      <option key={period.id} value={period.name}>\n                        {period.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"mt-6 flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowData(false); \n                    setIsFileSelected(false);\n                    setFileName('');\n                    setExcelDataBySirket({});\n                  }}\n                  className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 mr-3\"\n                >\n                  Yeni Dosya Yükle\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleSaveData}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium\"\n                  disabled={isSaving}\n                >\n                  {isSaving ? 'Kaydediliyor...' : 'Verileri Kaydet'}\n                </button>\n              </div>\n            </div>\n            \n            {/* Excel verilerini gösteren tablolar - her şirket için ayrı tablo */}\n            {Object.entries(excelDataBySirket).map(([sirketId, seferVerileri]) => (\n              seferVerileri.length > 0 && (\n                <TableForCompany \n                  key={sirketId} \n                  sirketId={sirketId} \n                  data={seferVerileri} \n                />\n              )\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}