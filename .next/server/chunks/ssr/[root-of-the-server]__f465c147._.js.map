{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/components/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useAuth } from '../context/AuthContext';\nimport { LogOut } from 'lucide-react';\n\nconst Sidebar = () => {\n  const pathname = usePathname();\n  const router = useRouter();\n  const { logout } = useAuth();\n\n  const handleLogout = () => {\n    logout();\n    router.push('/login');\n  };\n\n  const menuItems = [\n    {\n      href: '/',\n      label: 'Dashboard',\n      isActive: pathname === '/'\n    },\n    {\n      href: '/veri-yukle',\n      label: 'Veri Yükle',\n      isActive: pathname === '/veri-yukle'\n    },\n    {\n      href: '/sirket-fiyat-fatura',\n      label: 'Şirket İçin Fiyat - Fatura',\n      isActive: pathname === '/sirket-fiyat-fatura'\n    },\n    {\n      href: '/sofor-fiyat-fatura',\n      label: 'Şöför İçin Fiyat - Fatura',\n      isActive: pathname === '/sofor-fiyat-fatura'\n    },\n    {\n      href: '/sirket-bilanco',\n      label: 'Şirket Bilanço',\n      isActive: pathname === '/sirket-bilanco'\n    },\n    {\n      href: '/sofor-bilanco',\n      label: 'Şöför Bilanço',\n      isActive: pathname === '/sofor-bilanco'\n    },\n    {\n      href: '/cek-yonetimi',\n      label: 'Çek Yönetimi',\n      isActive: pathname === '/cek-yonetimi'\n    },\n    {\n      href: '/veritabani-yonetimi',\n      label: 'Veritabanı Yönetimi',\n      isActive: pathname === '/veritabani-yonetimi'\n    },\n    {\n      href: '/eski-veri-yukle',\n      label: 'Eski Veri Yükle',\n      isActive: pathname === '/eski-veri-yukle'\n    },\n    {\n      href: '/fatura-excel',\n      label: 'Fatura Excel',\n      isActive: pathname === '/fatura-excel'\n    }\n  ];\n\n  return (\n    <div className=\"w-64 min-w-64 flex-shrink-0 bg-white shadow-lg\">\n      <div className=\"p-6\">\n        <div className=\"space-y-2\">\n          {menuItems.map((item, index) => (\n            <Link\n              key={item.href}\n              href={item.href}\n              className={`block w-full p-3 text-center rounded-lg font-medium transition-colors ${\n                item.isActive\n                  ? 'bg-blue-600 text-white'\n                  : 'border border-gray-200 text-gray-700 hover:bg-gray-50'\n              } ${\n                // Grup ayırıcıları için boşluk ekle\n                (index === 1 || index === 4 || index === 7) ? 'mt-6' : ''\n              }`}\n            >\n              {item.label}\n            </Link>\n          ))}\n          \n          {/* Logout Button */}\n          <button\n            onClick={handleLogout}\n            className=\"block w-full p-3 mt-8 text-center rounded-lg font-medium transition-colors border border-red-200 text-red-600 hover:bg-red-50 flex items-center justify-center gap-2\"\n          >\n            <LogOut className=\"w-4 h-4\" />\n            Çıkış Yap\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,UAAU;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAEzB,MAAM,eAAe;QACnB;QACA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,YAAY;QAChB;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;QACA;YACE,MAAM;YACN,OAAO;YACP,UAAU,aAAa;QACzB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;oBACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,8OAAC,4JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,sEAAsE,EAChF,KAAK,QAAQ,GACT,2BACA,wDACL,CAAC,EACA,oCAAoC;4BACnC,UAAU,KAAK,UAAU,KAAK,UAAU,IAAK,SAAS,IACvD;sCAED,KAAK,KAAK;2BAXN,KAAK,IAAI;;;;;kCAgBlB,8OAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,8OAAC,0MAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;;;;;AAO1C;uCAEe","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sirket-fiyat-fatura/components/DonemSecimi.tsx"],"sourcesContent":["import React from 'react';\n\ninterface DonemSecimiProps {\n  secilenAy: number | null;\n  setSecilenAy: (ay: number | null) => void;\n  secilenDonem: number | null;\n  setSecilenDonem: (donem: number | null) => void;\n}\n\nconst DonemSecimi: React.FC<DonemSecimiProps> = ({\n  secilenAy,\n  setSecilenAy,\n  secilenDonem,\n  setSecilenDonem\n}) => {\n  const aylar = [\n    { deger: 1, ad: 'Ocak' },\n    { deger: 2, ad: 'Şubat' },\n    { deger: 3, ad: 'Mart' },\n    { deger: 4, ad: 'Nisan' },\n    { deger: 5, ad: 'Mayıs' },\n    { deger: 6, ad: 'Haziran' },\n    { deger: 7, ad: 'Temmuz' },\n    { deger: 8, ad: 'Ağustos' },\n    { deger: 9, ad: 'Eylül' },\n    { deger: 10, ad: 'Ekim' },\n    { deger: 11, ad: 'Kasım' },\n    { deger: 12, ad: 'Aralık' }\n  ];\n\n  const donemler = [\n    { deger: 1, ad: '1. Dönem (1-10)' },\n    { deger: 2, ad: '2. Dönem (11-20)' },\n    { deger: 3, ad: '3. Dönem (21-31)' }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div>\n        <label className=\"block mb-2 text-sm font-medium\">Ay Seçiniz</label>\n        <select\n          className=\"w-full p-2 border rounded-md\"\n          value={secilenAy || ''}\n          onChange={(e) => setSecilenAy(Number(e.target.value) || null)}\n        >\n          <option value=\"\">Ay Seçiniz</option>\n          {aylar.map((ay) => (\n            <option key={ay.deger} value={ay.deger}>\n              {ay.ad}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div>\n        <label className=\"block mb-2 text-sm font-medium\">Dönem Seçiniz</label>\n        <select\n          className=\"w-full p-2 border rounded-md\"\n          value={secilenDonem || ''}\n          onChange={(e) => setSecilenDonem(Number(e.target.value) || null)}\n        >\n          <option value=\"\">Dönem Seçiniz</option>\n          {donemler.map((donem) => (\n            <option key={donem.deger} value={donem.deger}>\n              {donem.ad}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default DonemSecimi; "],"names":[],"mappings":";;;;;AASA,MAAM,cAA0C,CAAC,EAC/C,SAAS,EACT,YAAY,EACZ,YAAY,EACZ,eAAe,EAChB;IACC,MAAM,QAAQ;QACZ;YAAE,OAAO;YAAG,IAAI;QAAO;QACvB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAO;QACvB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAG,IAAI;QAAU;QAC1B;YAAE,OAAO;YAAG,IAAI;QAAS;QACzB;YAAE,OAAO;YAAG,IAAI;QAAU;QAC1B;YAAE,OAAO;YAAG,IAAI;QAAQ;QACxB;YAAE,OAAO;YAAI,IAAI;QAAO;QACxB;YAAE,OAAO;YAAI,IAAI;QAAQ;QACzB;YAAE,OAAO;YAAI,IAAI;QAAS;KAC3B;IAED,MAAM,WAAW;QACf;YAAE,OAAO;YAAG,IAAI;QAAkB;QAClC;YAAE,OAAO;YAAG,IAAI;QAAmB;QACnC;YAAE,OAAO;YAAG,IAAI;QAAmB;KACpC;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBACC,WAAU;wBACV,OAAO,aAAa;wBACpB,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;;0CAExD,8OAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,MAAM,GAAG,CAAC,CAAC,mBACV,8OAAC;oCAAsB,OAAO,GAAG,KAAK;8CACnC,GAAG,EAAE;mCADK,GAAG,KAAK;;;;;;;;;;;;;;;;;0BAO3B,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBACC,WAAU;wBACV,OAAO,gBAAgB;wBACvB,UAAU,CAAC,IAAM,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;;0CAE3D,8OAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,SAAS,GAAG,CAAC,CAAC,sBACb,8OAAC;oCAAyB,OAAO,MAAM,KAAK;8CACzC,MAAM,EAAE;mCADE,MAAM,KAAK;;;;;;;;;;;;;;;;;;;;;;;AAQpC;uCAEe","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sofor-fiyat-fatura/components/SirketSecimi.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Sirket {\n  sirket_id: number;\n  sirket_adi: string;\n}\n\ninterface SirketSecimiProps {\n  secilenSirket: number | null;\n  setSecilenSirket: (sirket: number | null) => void;\n}\n\nconst SirketSecimi: React.FC<SirketSecimiProps> = ({\n  secilenSirket,\n  setSecilenSirket\n}) => {\n  const [sirketler, setSirketler] = useState<Sirket[]>([]);\n  const [yukleniyor, setYukleniyor] = useState(true);\n\n  useEffect(() => {\n    const sirketleriGetir = async () => {\n      try {\n        setYukleniyor(true);\n        const response = await fetch('/api/sirketler');\n        \n        if (response.ok) {\n          const data = await response.json();\n          setSirketler(data);\n        } else {\n          console.error('Şirketler yüklenirken hata oluştu');\n        }\n      } catch (error) {\n        console.error('Şirketler yüklenirken hata:', error);\n      } finally {\n        setYukleniyor(false);\n      }\n    };\n\n    sirketleriGetir();\n  }, []);\n\n  return (\n    <div>\n      <label className=\"block mb-2 text-sm font-medium\">Şirket Seçiniz</label>\n      <select\n        className=\"w-full p-2 border rounded-md\"\n        value={secilenSirket || ''}\n        onChange={(e) => setSecilenSirket(Number(e.target.value) || null)}\n        disabled={yukleniyor}\n      >\n        <option value=\"\">Tüm Şirketler</option>\n        {sirketler.map((sirket) => (\n          <option key={sirket.sirket_id} value={sirket.sirket_id}>\n            {sirket.sirket_adi}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SirketSecimi; "],"names":[],"mappings":";;;;AAAA;;;AAYA,MAAM,eAA4C,CAAC,EACjD,aAAa,EACb,gBAAgB,EACjB;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,IAAI;gBACF,cAAc;gBACd,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,aAAa;gBACf,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;YAC/C,SAAU;gBACR,cAAc;YAChB;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;;0BACC,8OAAC;gBAAM,WAAU;0BAAiC;;;;;;0BAClD,8OAAC;gBACC,WAAU;gBACV,OAAO,iBAAiB;gBACxB,UAAU,CAAC,IAAM,iBAAiB,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;gBAC5D,UAAU;;kCAEV,8OAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,UAAU,GAAG,CAAC,CAAC,uBACd,8OAAC;4BAA8B,OAAO,OAAO,SAAS;sCACnD,OAAO,UAAU;2BADP,OAAO,SAAS;;;;;;;;;;;;;;;;;AAOvC;uCAEe","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sofor-fiyat-fatura/components/SeferlerTablosu.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Sefer {\n  sefer_id: number;\n  sira_no: number;\n  irsaliye_numarasi?: string;\n  irsaliye_tarihi?: string;\n  cikis_yeri: string;\n  tahliye_edilen_firma: string;\n  tahliye_yeri: string;\n  tonaj_kg: string;\n  mt?: number;\n  arac_tipi: string;\n  sirketten_alinan_ucret: number;\n  sofore_odenen_ucret: number;\n  sofor_fatura_ucreti?: number;\n  aciklama?: string;\n  sirket?: {\n    sirket_id: number;\n    sirket_adi: string;\n  };\n  arac?: {\n    arac_id: number;\n    plaka: string;\n    sofor_adi: string;\n  };\n}\n\n// Fiyat listesi için tip tanımı\ninterface FiyatListesi {\n  fiyat_listesi_id: number;\n  sirket_id: number;\n  tahliye_yeri: string;\n  km: number | null;\n  arac_tipi: string;\n  ucret: number;\n  sofor_ucreti: number | null;\n}\n\ninterface SeferlerTablosuProps {\n  seferler: Sefer[];\n  fiyatGuncelle: (seferId: number, yeniFiyat: number) => Promise<void>;\n}\n\nconst SeferlerTablosu: React.FC<SeferlerTablosuProps> = ({ seferler, fiyatGuncelle }) => {\n  const [yeniFiyatlar, setYeniFiyatlar] = useState<{ [key: number]: number }>({});\n  const [kaydediliyor, setKaydediliyor] = useState(false);\n  const [fiyatListesi, setFiyatListesi] = useState<FiyatListesi[]>([]);\n  const [eslesenYerler, setEslesenYerler] = useState<{ [key: number]: string }>({});\n  const [faturaModuAktif, setFaturaModuAktif] = useState(false);\n  const [faturaFiyatlari, setFaturaFiyatlari] = useState<{ [key: number]: number }>({});\n  const [faturaKaydediliyor, setFaturaKaydediliyor] = useState(false);\n  \n  // Seferlerin sıra numarasına göre sıralanması için yardımcı fonksiyon\n  const siralamaYap = (seferler: Sefer[]): Sefer[] => {\n    return [...seferler].sort((a, b) => {\n      const aNum = Number(a.sira_no);\n      const bNum = Number(b.sira_no);\n      return aNum - bNum;\n    });\n  };\n  \n  // Seferler değiştiğinde yeniFiyatlar state'ini güncelle\n  useEffect(() => {\n    const fiyatlar: { [key: number]: number } = {};\n    seferler.forEach(sefer => {\n      if (sefer && sefer.sefer_id && typeof sefer.sofore_odenen_ucret === 'number') {\n        fiyatlar[sefer.sefer_id] = sefer.sofore_odenen_ucret;\n      }\n    });\n    setYeniFiyatlar(fiyatlar);\n  }, [seferler]);\n\n  // Tüm fiyat listesini getir\n  useEffect(() => {\n    fetchFiyatListesi();\n  }, [seferler]);\n\n  // Fiyat listesini getiren fonksiyon\n  const fetchFiyatListesi = async () => {\n    try {\n      console.log(\"Fiyat listesi getiriliyor...\");\n      const response = await fetch('/api/fiyat-listesi?tip=sofor');\n      if (response.ok) {\n        const data = await response.json();\n        setFiyatListesi(data);\n        console.log(`Alınan fiyat listesi: ${data.length} kayıt`);\n        \n        // Mevcut fiyatlar için eşleşen yerleri bul\n        const eslesmeYerleri: { [key: number]: string } = {};\n        const otomatikFiyatlar: { [key: number]: number } = {...yeniFiyatlar};\n        \n        seferler.forEach(sefer => {\n          if (sefer.sirket) {\n            // Araç tipine göre filtrelenmiş fiyat listesi\n            const filteredList = data.filter(\n              (fiyat: FiyatListesi) =>\n                fiyat.sirket_id === sefer.sirket?.sirket_id &&\n                fiyat.arac_tipi === sefer.arac_tipi\n            );\n            \n            console.log(`Şoför sefer #${sefer.sefer_id} için filtrelenmiş fiyat listesi (${sefer.arac_tipi}):`, filteredList.length);\n            \n            // ŞİRKET fiyatına en yakın olanı bul (sofore_odenen_ucret yerine sirketten_alinan_ucret'e göre)\n            const eslesenFiyat = filteredList.find(\n              (fiyat: FiyatListesi) =>\n                Math.abs(fiyat.ucret - sefer.sirketten_alinan_ucret) < 1.0 // Tolerans değeri\n            );\n            \n            if (eslesenFiyat) {\n              eslesmeYerleri[sefer.sefer_id] = eslesenFiyat.tahliye_yeri;\n              \n              // Şoför ücreti varsa, bu ücreti otomatik olarak ayarla\n              if (eslesenFiyat.sofor_ucreti !== null) {\n                otomatikFiyatlar[sefer.sefer_id] = eslesenFiyat.sofor_ucreti;\n              }\n              \n              console.log(`Sefer #${sefer.sefer_id} için şirket fiyatına göre eşleşen fiyat bulundu: ${eslesenFiyat.tahliye_yeri} (Fiyat: ${eslesenFiyat.ucret}, Şoför Ücreti: ${eslesenFiyat.sofor_ucreti})`);\n            } else {\n              console.log(`Sefer #${sefer.sefer_id} için şirket fiyatına göre eşleşen fiyat bulunamadı - Şirket: ${sefer.sirket.sirket_id}, Araç: ${sefer.arac_tipi}, Şirket Fiyatı: ${sefer.sirketten_alinan_ucret}`);\n              \n              // En yakın fiyatı göster (debug için)\n              if (filteredList.length > 0) {\n                filteredList.sort((a: FiyatListesi, b: FiyatListesi) => \n                  Math.abs(a.ucret - sefer.sirketten_alinan_ucret) - Math.abs(b.ucret - sefer.sirketten_alinan_ucret)\n                );\n                console.log(`En yakın şirket fiyatı: ${filteredList[0].tahliye_yeri} (Fiyat: ${filteredList[0].ucret}, Fark: ${Math.abs(filteredList[0].ucret - sefer.sirketten_alinan_ucret)})`);\n              }\n            }\n          }\n        });\n        \n        setEslesenYerler(eslesmeYerleri);\n        // Yeni fiyatları set et\n        setYeniFiyatlar(otomatikFiyatlar);\n      }\n    } catch (error: any) {\n      console.error('Fiyat listesi getirme hatası:', error);\n    }\n  };\n\n  // Girilen fiyat için eşleşen tahliye yerini bul\n  const findMatchingTahliyeYeri = (sefer: Sefer, fiyat: number): string => {\n    if (!sefer.sirket) return '';\n    \n    console.log(`Şoför eşleşme aranıyor - Şirket: ${sefer.sirket.sirket_id}, Araç: ${sefer.arac_tipi}, Şirket Fiyatı: ${sefer.sirketten_alinan_ucret}, Girilen Şoför Fiyatı: ${fiyat}`);\n    \n    // Araç tipine göre filtrelenmiş fiyat listesi\n    const filteredList = fiyatListesi.filter(\n      f => \n        f.sirket_id === sefer.sirket?.sirket_id &&\n        f.arac_tipi === sefer.arac_tipi\n    );\n    \n    // 1. İlk olarak girilen şoför fiyatına tam eşleşme var mı bakalım\n    let eslesenFiyat = filteredList.find(\n      f => f.sofor_ucreti !== null && Math.abs(f.sofor_ucreti - fiyat) < 0.1 // Şoför fiyatı için daha hassas tolerans\n    );\n    \n    if (eslesenFiyat) {\n      console.log(`Şoför fiyatına göre eşleşme bulundu: ${eslesenFiyat.tahliye_yeri} (Şoför Fiyatı: ${eslesenFiyat.sofor_ucreti})`);\n      return eslesenFiyat.tahliye_yeri;\n    }\n    \n    // 2. Şoför fiyatı eşleşmesi bulunamazsa, eski yöntemle şirket fiyatına göre eşleşme arayalım\n    eslesenFiyat = filteredList.find(\n      f => Math.abs(f.ucret - sefer.sirketten_alinan_ucret) < 1.0 // Tolerans değeri\n    );\n    \n    if (eslesenFiyat) {\n      // Şirket fiyatına göre eşleşme bulundu, şimdi girilen şoför fiyatı ile karşılaştıralım\n      if (eslesenFiyat.sofor_ucreti !== null && Math.abs(eslesenFiyat.sofor_ucreti - fiyat) < 1.0) {\n        // Şoför fiyatı da aynı kaydın şoför fiyatına yakınsa, eşleşen kaydı kullanalım\n        console.log(`Şirket fiyatına göre eşleşen bulundu ve şoför fiyatı da uyumlu: ${eslesenFiyat.tahliye_yeri} (Şirket: ${eslesenFiyat.ucret}, Şoför: ${eslesenFiyat.sofor_ucreti})`);\n        return eslesenFiyat.tahliye_yeri;\n      } else {\n        // Şoför fiyatı farklı, bu durumda eşleşen tahliye yeri bulunamadı olarak değerlendiriyoruz\n        console.log(`Şirket fiyatına göre eşleşme bulundu (${eslesenFiyat.tahliye_yeri}) ama şoför fiyatı farklı. Eşleşme yok kabul ediliyor.`);\n        return '';\n      }\n    }\n    \n    // Hiçbir şekilde eşleşme bulunamadı\n    console.log(`Eşleşen fiyat bulunamadı`);\n    console.log(\"Olası fiyat eşleşmeleri:\");\n    if (filteredList.length > 0) {\n      filteredList.forEach(f => {\n        console.log(`  Tahliye: ${f.tahliye_yeri}, Şirket: ${f.ucret}, Şoför: ${f.sofor_ucreti}, Şirket Farkı: ${Math.abs(f.ucret - sefer.sirketten_alinan_ucret)}, Şoför Farkı: ${f.sofor_ucreti !== null ? Math.abs(f.sofor_ucreti - fiyat) : 'N/A'}`);\n      });\n    }\n    \n    return '';\n  };\n\n  // Fiyat debug butonu\n  const debugFiyatEslesmeleri = () => {\n    console.log(\"Mevcut fiyat listesi:\", fiyatListesi);\n    console.log(\"Mevcut eşleşen yerler:\", eslesenYerler);\n    \n    console.log(\"Şirket fiyatları olan kayıtlar:\", fiyatListesi.filter(f => f.ucret !== null));\n    \n    seferler.forEach(sefer => {\n      if (sefer.sirket) {\n        console.log(`Sefer #${sefer.sefer_id} - Şirket: ${sefer.sirket.sirket_adi}, Araç: ${sefer.arac_tipi}, Şirket Fiyatı: ${sefer.sirketten_alinan_ucret}, Şoför Fiyatı: ${sefer.sofore_odenen_ucret}`);\n      }\n    });\n    \n    alert(\"Şirket ve şoför fiyat eşleştirme bilgileri konsola yazdırıldı. Geliştirici konsolunu kontrol edin.\");\n  };\n\n  const fiyatDegistir = (seferId: number, yeniFiyat: number, sefer: Sefer) => {\n    if (seferId && !isNaN(yeniFiyat)) {\n      // Kullanıcının girdiği değeri direkt olarak set edelim\n      setYeniFiyatlar(prev => ({\n        ...prev,\n        [seferId]: yeniFiyat\n      }));\n      \n      // Şoför fiyatı değiştiğinde tahliye yerini şirket fiyatına göre bul\n      // Yani burada sofore_odenen_ucret değişirken, tahliye yerini sirketten_alinan_ucret'e göre buluyoruz\n      const eslesenYer = findMatchingTahliyeYeri(sefer, yeniFiyat);\n      console.log(`Şoför sefer #${seferId} için bulunan eşleşen yer: \"${eslesenYer}\"`);\n      \n      // Her durumda state'i güncelle (boş string bile olsa)\n      setEslesenYerler(prev => ({\n        ...prev,\n        [seferId]: eslesenYer\n      }));\n    }\n  };\n\n  // Input değişikliği işleyicisi\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>, sefer: Sefer) => {\n    const value = e.target.value;\n    const numValue = parseFloat(value);\n    \n    if (!isNaN(numValue) && numValue > 0) {\n      // Sayısal değer kontrolü\n      console.log(`Şoför input değeri değişti: ${value}, sayısal değer: ${numValue}`);\n      fiyatDegistir(sefer.sefer_id, numValue, sefer);\n    } else {\n      // Değer boş veya geçersizse, fiyat yerini temizle\n      setYeniFiyatlar(prev => ({\n        ...prev,\n        [sefer.sefer_id]: value === '' ? 0 : numValue || 0\n      }));\n      setEslesenYerler(prev => ({\n        ...prev,\n        [sefer.sefer_id]: ''\n      }));\n    }\n  };\n\n  // Toplam fiyatı hesapla (MT * Birim Fiyat)\n  const hesaplaToplamFiyat = (sefer: Sefer, birimFiyat: number): number => {\n    const mt = sefer.mt || 0;\n    \n    // YAP-İstanbul için özel durum - MT ile çarpma yapılmayacak\n    if (sefer.sirket && sefer.sirket.sirket_adi === 'YAP-İstanbul') {\n      return birimFiyat; // MT ile çarpma yapılmayacak, sadece birim fiyat\n    }\n    \n    return mt * birimFiyat;\n  };\n\n  // Tüm fiyat değişikliklerini toplu olarak kaydet\n  const tumFiyatlariKaydet = async () => {\n    setKaydediliyor(true);\n    \n    try {\n      // Değişen fiyatları bul\n      const degisiklikYapilanSeferler = seferler.filter(\n        sefer => sefer && sefer.sefer_id && \n        yeniFiyatlar[sefer.sefer_id] !== undefined && \n        yeniFiyatlar[sefer.sefer_id] !== sefer.sofore_odenen_ucret\n      );\n      \n      // Değişiklik yoksa işlemi sonlandır\n      if (degisiklikYapilanSeferler.length === 0) {\n        alert('Değişiklik yapılmadı');\n        return;\n      }\n      \n      // Her bir değişikliği kaydet\n      for (const sefer of degisiklikYapilanSeferler) {\n        await fiyatGuncelle(sefer.sefer_id, yeniFiyatlar[sefer.sefer_id]);\n      }\n      \n      alert('Tüm fiyat değişiklikleri kaydedildi');\n    } catch (error: any) {\n      console.error('Fiyatlar kaydedilirken hata:', error);\n      alert('Fiyatlar kaydedilirken bir hata oluştu');\n    } finally {\n      setKaydediliyor(false);\n    }\n  };\n\n  // Fatura oluştur - %10 artırılmış fiyatları hesapla\n  const faturaOlustur = () => {\n    const yeniFaturaFiyatlari: { [key: number]: number } = {};\n    \n    seferler.forEach(sefer => {\n      if (sefer && sefer.sefer_id) {\n        // Mevcut şoför fiyatını %10 artır ve tam sayıya yuvarla\n        const mevcutFiyat = yeniFiyatlar[sefer.sefer_id] || sefer.sofore_odenen_ucret;\n        const artirilimisFiyat = Math.round(mevcutFiyat * 1.1); // Tam sayıya yuvarla\n        yeniFaturaFiyatlari[sefer.sefer_id] = artirilimisFiyat;\n      }\n    });\n    \n    setFaturaFiyatlari(yeniFaturaFiyatlari);\n    setFaturaModuAktif(true);\n  };\n\n  // Fatura fiyatını değiştir\n  const faturaFiyatiDegistir = (seferId: number, yeniFiyat: number) => {\n    setFaturaFiyatlari(prev => ({\n      ...prev,\n      [seferId]: yeniFiyat\n    }));\n  };\n\n  // Fatura fiyatlarını kaydet\n  const faturaFiyatlariKaydet = async () => {\n    setFaturaKaydediliyor(true);\n    \n    try {\n      console.log('Fatura fiyatları kaydediliyor...', faturaFiyatlari);\n      \n      // Her bir fatura fiyatını kaydet\n      for (const sefer of seferler) {\n        if (sefer && sefer.sefer_id && faturaFiyatlari[sefer.sefer_id] !== undefined) {\n          console.log(`Sefer ${sefer.sefer_id} için fatura fiyatı kaydediliyor: ${faturaFiyatlari[sefer.sefer_id]}`);\n          \n          const response = await fetch('/api/seferler/sofor-fatura-guncelle', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              seferId: sefer.sefer_id,\n              sofor_fatura_ucreti: faturaFiyatlari[sefer.sefer_id]\n            }),\n          });\n          \n          if (!response.ok) {\n            const errorData = await response.json();\n            console.error(`Sefer ${sefer.sefer_id} API hatası:`, errorData);\n            throw new Error(`Sefer ${sefer.sefer_id} fatura ücreti güncellenirken hata oluştu: ${errorData.error || response.statusText}`);\n          }\n          \n          const result = await response.json();\n          console.log(`Sefer ${sefer.sefer_id} başarıyla güncellendi:`, result);\n        }\n      }\n      \n      alert('Fatura fiyatları başarıyla kaydedildi');\n      setFaturaModuAktif(false);\n      setFaturaFiyatlari({});\n      \n      // Sayfayı yenile (parent component'ten seferleri yeniden getir)\n      window.location.reload();\n      \n    } catch (error: any) {\n      console.error('Fatura fiyatları kaydedilirken hata:', error);\n      alert(`Fatura fiyatları kaydedilirken bir hata oluştu: ${error.message || error}`);\n    } finally {\n      setFaturaKaydediliyor(false);\n    }\n  };\n\n  // Fatura modunu iptal et\n  const faturaModuIptal = () => {\n    setFaturaModuAktif(false);\n    setFaturaFiyatlari({});\n  };\n\n  // Seferleri araçlara göre gruplandır\n  const aracGruplari = seferler.reduce((gruplar, sefer) => {\n    if (!sefer.arac) return gruplar;\n    \n    const aracId = sefer.arac.arac_id;\n    if (!gruplar[aracId]) {\n      gruplar[aracId] = {\n        arac: sefer.arac,\n        seferler: []\n      };\n    }\n    \n    gruplar[aracId].seferler.push(sefer);\n    return gruplar;\n  }, {} as { \n    [key: number]: { \n      arac: { arac_id: number; plaka: string; sofor_adi: string }; \n      seferler: Sefer[] \n    } \n  });\n\n  // Fiyat değişti mi kontrolü\n  const fiyatDegistiMi = (sefer: Sefer): boolean => {\n    if (!sefer || !sefer.sefer_id || yeniFiyatlar[sefer.sefer_id] === undefined) {\n      return false;\n    }\n    return yeniFiyatlar[sefer.sefer_id] !== sefer.sofore_odenen_ucret;\n  };\n\n  // Fiyat değeri al\n  const getFiyatDegeri = (sefer: Sefer): number => {\n    if (sefer && sefer.sefer_id && yeniFiyatlar[sefer.sefer_id] !== undefined) {\n      return yeniFiyatlar[sefer.sefer_id];\n    }\n    return sefer ? sefer.sofore_odenen_ucret : 0;\n  };\n  \n  // Genel toplam tutarı hesapla\n  const genelToplamTutar = seferler.reduce((toplam, sefer) => {\n    if (faturaModuAktif) {\n      const faturaFiyati = faturaFiyatlari[sefer.sefer_id] || 0;\n      const toplamFiyat = hesaplaToplamFiyat(sefer, faturaFiyati);\n      return toplam + toplamFiyat;\n    } else {\n      const birimFiyat = getFiyatDegeri(sefer);\n      const toplamFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n      return toplam + toplamFiyat;\n    }\n  }, 0);\n  \n  // Araç bazında toplam tutarı hesapla\n  const hesaplaAracToplami = (seferler: Sefer[]): number => {\n    return seferler.reduce((toplam, sefer) => {\n      if (faturaModuAktif) {\n        const faturaFiyati = faturaFiyatlari[sefer.sefer_id] || 0;\n        const toplamFiyat = hesaplaToplamFiyat(sefer, faturaFiyati);\n        return toplam + toplamFiyat;\n      } else {\n        const birimFiyat = getFiyatDegeri(sefer);\n        const toplamFiyat = hesaplaToplamFiyat(sefer, birimFiyat);\n        return toplam + toplamFiyat;\n      }\n    }, 0);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"mb-4 flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-xl font-semibold\">\n            {faturaModuAktif ? 'Fatura Modu - ' : ''}Genel Toplam: {genelToplamTutar.toLocaleString('tr-TR')} TL\n          </h2>\n          {faturaModuAktif && (\n            <p className=\"text-sm text-blue-600 mt-1\">\n              Fatura fiyatları (%10 artırılmış) gösteriliyor. Fiyatları düzenleyebilir ve kaydedebilirsiniz.\n            </p>\n          )}\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={debugFiyatEslesmeleri}\n            className=\"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\n          >\n            Fiyat Debug\n          </button>\n          \n          {!faturaModuAktif ? (\n            <>\n              <button\n                onClick={faturaOlustur}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                Fatura Oluştur\n              </button>\n              <button\n                onClick={tumFiyatlariKaydet}\n                disabled={kaydediliyor}\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-400\"\n              >\n                {kaydediliyor ? 'Kaydediliyor...' : 'Tüm Değişiklikleri Kaydet'}\n              </button>\n            </>\n          ) : (\n            <>\n              <button\n                onClick={faturaModuIptal}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\n              >\n                İptal\n              </button>\n              <button\n                onClick={faturaFiyatlariKaydet}\n                disabled={faturaKaydediliyor}\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-400\"\n              >\n                {faturaKaydediliyor ? 'Kaydediliyor...' : 'Fatura Fiyatlarını Kaydet'}\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {Object.values(aracGruplari).map((grup) => {\n        // Her grup için seferleri sıra numarasına göre sırala\n        const siraliSeferler = siralamaYap(grup.seferler);\n        \n        return (\n        <div key={grup.arac.arac_id} className=\"mb-8\">\n          <div className=\"bg-gray-100 p-4 rounded-t-lg border border-gray-300\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-semibold\">{grup.arac.sofor_adi}</h3>\n              <span className=\"font-medium\">\n                Toplam: {hesaplaAracToplami(grup.seferler).toLocaleString('tr-TR')} TL\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border border-t-0\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"py-2 px-3 border text-left w-16\">Sıra No</th>\n                  <th className=\"py-2 px-3 border text-left\">Şirket</th>\n                  <th className=\"py-2 px-3 border text-left\">İrsaliye No</th>\n                  <th className=\"py-2 px-3 border text-left\">İrsaliye Tarihi</th>\n                  <th className=\"py-2 px-3 border text-left w-40\">Tahliye Edilen Firma</th>\n                  <th className=\"py-2 px-3 border text-left\">Tahliye Yeri</th>\n                  <th className=\"py-2 px-3 border text-left\">MT</th>\n                  <th className=\"py-2 px-3 border text-left\">Araç Tipi</th>\n                  <th className=\"py-2 px-3 border text-left w-24\">Şirket Birim Fiyatı (TL)</th>\n                  <th className=\"py-2 px-3 border text-left w-32\">\n                    {faturaModuAktif ? 'Fatura Fiyatı (TL)' : 'Birim Fiyat (TL)'}\n                  </th>\n                  <th className=\"py-2 px-3 border text-left\">Fiyat (TL)</th>\n                  <th className=\"py-2 px-3 border text-left\">Fiyat Yeri</th>\n                </tr>\n              </thead>\n              <tbody>\n                {siraliSeferler.map((sefer) => sefer && (\n                  <tr key={sefer.sefer_id} className=\"hover:bg-gray-50\">\n                    <td className=\"py-2 px-3 border w-16\">{sefer.sira_no}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.sirket ? sefer.sirket.sirket_adi : '-'}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.irsaliye_numarasi || '-'}</td>\n                    <td className=\"py-2 px-3 border\">\n                      {sefer.irsaliye_tarihi ? new Date(sefer.irsaliye_tarihi).toLocaleDateString('tr-TR') : '-'}\n                    </td>\n                    <td className=\"py-2 px-3 border w-40\">{sefer.tahliye_edilen_firma}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.tahliye_yeri}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.mt !== undefined ? sefer.mt : '-'}</td>\n                    <td className=\"py-2 px-3 border\">{sefer.arac_tipi}</td>\n                    <td className=\"py-2 px-3 border w-24\">{sefer.sirketten_alinan_ucret.toLocaleString('tr-TR')}</td>\n                    <td className=\"py-2 px-3 border w-32\">\n                      {faturaModuAktif ? (\n                        <input\n                          type=\"number\"\n                          className=\"w-full p-1 border rounded bg-blue-50 border-blue-500\"\n                          value={faturaFiyatlari[sefer.sefer_id] || 0}\n                          onChange={(e) => faturaFiyatiDegistir(sefer.sefer_id, parseFloat(e.target.value) || 0)}\n                        />\n                      ) : (\n                        <input\n                          type=\"number\"\n                          className={`w-full p-1 border rounded ${fiyatDegistiMi(sefer) ? 'bg-yellow-50 border-yellow-500' : ''}`}\n                          value={getFiyatDegeri(sefer)}\n                          onChange={(e) => handleInputChange(e, sefer)}\n                        />\n                      )}\n                    </td>\n                    <td className=\"py-2 px-3 border font-medium\">\n                      {faturaModuAktif \n                        ? hesaplaToplamFiyat(sefer, faturaFiyatlari[sefer.sefer_id] || 0).toLocaleString('tr-TR')\n                        : hesaplaToplamFiyat(sefer, getFiyatDegeri(sefer)).toLocaleString('tr-TR')\n                      }\n                    </td>\n                    <td className=\"py-2 px-3 border font-medium text-green-600\">\n                      {eslesenYerler[sefer.sefer_id] || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SeferlerTablosu; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/sofor-fiyat-fatura/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport Sidebar from '../components/Sidebar';\nimport { useTheme } from '../context/ThemeContext';\nimport DonemSecimi from '../sirket-fiyat-fatura/components/DonemSecimi';\nimport SirketSecimi from './components/SirketSecimi';\nimport SeferlerTablosu from './components/SeferlerTablosu';\n\nexport default function SoforFiyatFatura() {\n  const { theme } = useTheme();\n  const [secilenAy, setSecilenAy] = useState<number | null>(null);\n  const [secilenDonem, setSecilenDonem] = useState<number | null>(null);\n  const [secilenSirket, setSecilenSirket] = useState<number | null>(null);\n  const [yuklemeDurumu, setYuklemeDurumu] = useState<boolean>(false);\n  const [seferler, setSeferler] = useState<any[]>([]);\n\n  // Seferleri getir\n  const seferleriGetir = async () => {\n    if (!secilenAy || !secilenDonem) {\n      alert('Lütfen ay ve dönem seçiniz');\n      return;\n    }\n    \n    setYuklemeDurumu(true);\n    \n    try {\n      // Şirket seçildiyse URL'de belirtilecek, seçilmediyse tüm şirketler getirilecek\n      let apiUrl = `/api/seferler/tumunu-listele?ay=${secilenAy}&donem=${secilenDonem}`;\n      if (secilenSirket) {\n        apiUrl += `&sirketId=${secilenSirket}`;\n      }\n      \n      const response = await fetch(apiUrl);\n      \n      if (response.ok) {\n        const data = await response.json();\n        setSeferler(data);\n      } else {\n        alert('Seferler yüklenirken bir hata oluştu');\n      }\n    } catch (error) {\n      console.error('Seferler yüklenirken hata:', error);\n      alert('Seferler yüklenirken bir hata oluştu');\n    } finally {\n      setYuklemeDurumu(false);\n    }\n  };\n\n  const fiyatGuncelle = async (seferId: number, yeniFiyat: number) => {\n    try {\n      const response = await fetch('/api/seferler/sofor-fiyat-guncelle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seferId,\n          sofore_odenen_ucret: yeniFiyat\n        }),\n      });\n      \n      if (response.ok) {\n        // Başarılı güncelleme sonrası seferleri yeniden yükle\n        seferleriGetir();\n      } else {\n        alert('Fiyat güncellenirken bir hata oluştu');\n      }\n    } catch (error) {\n      console.error('Fiyat güncellenirken hata:', error);\n      alert('Fiyat güncellenirken bir hata oluştu');\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-[var(--background)] text-[var(--foreground)]\">\n      {/* Sol kenar menüsü */}\n      <Sidebar />\n\n      {/* Ana içerik alanı */}\n      <div className=\"flex-1 p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-6\">Şoför İçin Fiyat - Fatura</h1>\n          \n          <div className=\"bg-[var(--card-bg)] rounded-lg shadow-md p-6 mb-8 border border-[var(--card-border)]\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div>\n                <SirketSecimi \n                  secilenSirket={secilenSirket}\n                  setSecilenSirket={setSecilenSirket}\n                />\n              </div>\n              <div className=\"md:col-span-2\">\n                <DonemSecimi \n                  secilenAy={secilenAy} \n                  setSecilenAy={setSecilenAy}\n                  secilenDonem={secilenDonem}\n                  setSecilenDonem={setSecilenDonem}\n                />\n              </div>\n              \n              <div className=\"md:col-span-3\">\n                <button\n                  onClick={seferleriGetir}\n                  disabled={yuklemeDurumu}\n                  className=\"w-full p-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400\"\n                >\n                  {yuklemeDurumu ? 'Yükleniyor...' : 'Seferleri Getir'}\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {seferler.length > 0 ? (\n            <SeferlerTablosu seferler={seferler} fiyatGuncelle={fiyatGuncelle} />\n          ) : (\n            <div className=\"bg-[var(--card-bg)] rounded-lg shadow-md p-6 border border-[var(--card-border)] text-center\">\n              <p className=\"text-gray-500\">Seçilen kriterlere uygun sefer bulunamadı.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AATA;;;;;;;;AAWe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAElD,kBAAkB;IAClB,MAAM,iBAAiB;QACrB,IAAI,CAAC,aAAa,CAAC,cAAc;YAC/B,MAAM;YACN;QACF;QAEA,iBAAiB;QAEjB,IAAI;YACF,gFAAgF;YAChF,IAAI,SAAS,CAAC,gCAAgC,EAAE,UAAU,OAAO,EAAE,cAAc;YACjF,IAAI,eAAe;gBACjB,UAAU,CAAC,UAAU,EAAE,eAAe;YACxC;YAEA,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,YAAY;YACd,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,gBAAgB,OAAO,SAAiB;QAC5C,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sCAAsC;gBACjE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,qBAAqB;gBACvB;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,sDAAsD;gBACtD;YACF,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,oIAAA,CAAA,UAAO;;;;;0BAGR,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCAExC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDACC,cAAA,8OAAC,qKAAA,CAAA,UAAY;4CACX,eAAe;4CACf,kBAAkB;;;;;;;;;;;kDAGtB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,qKAAA,CAAA,UAAW;4CACV,WAAW;4CACX,cAAc;4CACd,cAAc;4CACd,iBAAiB;;;;;;;;;;;kDAIrB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CACC,SAAS;4CACT,UAAU;4CACV,WAAU;sDAET,gBAAgB,kBAAkB;;;;;;;;;;;;;;;;;;;;;;wBAM1C,SAAS,MAAM,GAAG,kBACjB,8OAAC,wKAAA,CAAA,UAAe;4BAAC,UAAU;4BAAU,eAAe;;;;;iDAEpD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3C","debugId":null}}]
}