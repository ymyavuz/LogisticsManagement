{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/fatura-excel/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { FileSpreadsheet, Building2, Users, Calendar, ArrowRight, Loader2 } from 'lucide-react';\n\ninterface Sirket {\n  sirket_id: number;\n  sirket_adi: string;\n  vergi_numarasi: string;\n}\n\ninterface Arac {\n  arac_id: number;\n  plaka: string;\n  sofor_adi: string;\n  vergi_numarasi: string;\n  sirket_id: number;\n  sirket: {\n    sirket_adi: string;\n  };\n}\n\nconst FaturaExcelPage = () => {\n  const [step, setStep] = useState(1);\n  const [faturaType, setFaturaType] = useState('');\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [selectedDriver, setSelectedDriver] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [companies, setCompanies] = useState<Sirket[]>([]);\n  const [drivers, setDrivers] = useState<Arac[]>([]);\n\n  const months = [\n    { value: '01', label: 'Ocak' },\n    { value: '02', label: 'Şubat' },\n    { value: '03', label: 'Mart' },\n    { value: '04', label: 'Nisan' },\n    { value: '05', label: 'Mayıs' },\n    { value: '06', label: 'Haziran' },\n    { value: '07', label: 'Temmuz' },\n    { value: '08', label: 'Ağustos' },\n    { value: '09', label: 'Eylül' },\n    { value: '10', label: 'Ekim' },\n    { value: '11', label: 'Kasım' },\n    { value: '12', label: 'Aralık' }\n  ];\n\n  const periods = ['Dönem 1', 'Dönem 2', 'Dönem 3'];\n\n  // Şirket ve araç verilerini getir\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // Şirketleri getir\n        const sirketlerResponse = await fetch('/api/sirketler');\n        if (sirketlerResponse.ok) {\n          const sirketlerData = await sirketlerResponse.json();\n          setCompanies(sirketlerData);\n        }\n\n        // Araçları getir\n        const araclarResponse = await fetch('/api/araclar');\n        if (araclarResponse.ok) {\n          const araclarData = await araclarResponse.json();\n          setDrivers(araclarData);\n        }\n      } catch (error) {\n        console.error('Veri çekme hatası:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleNext = () => {\n    if (step < 4) {\n      setStep(step + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (step > 1) {\n      setStep(step - 1);\n    }\n  };\n\n  const handleGenerateExcel = () => {\n    // Bu kısım daha sonra excel oluşturma fonksiyonu ile değiştirilecek\n    const selectedCompanyName = faturaType === 'sirket' \n      ? companies.find(c => c.sirket_id.toString() === selectedCompany)?.sirket_adi\n      : drivers.find(d => d.arac_id.toString() === selectedDriver)?.sirket.sirket_adi;\n    \n    const selectedDriverName = faturaType === 'sofor' \n      ? drivers.find(d => d.arac_id.toString() === selectedDriver)?.sofor_adi\n      : '';\n\n    alert(`Excel oluşturuluyor...\\nFatura Türü: ${faturaType === 'sirket' ? 'Şirket İçin Fatura' : 'Şöför İçin Fatura'}\\nŞirket: ${selectedCompanyName}\\n${faturaType === 'sofor' ? `Şöför: ${selectedDriverName}\\n` : ''}Ay: ${months.find(m => m.value === selectedMonth)?.label}\\nDönem: ${selectedPeriod}`);\n  };\n\n  const canProceed = () => {\n    switch (step) {\n      case 1: return faturaType !== '';\n      case 2: return faturaType === 'sirket' ? selectedCompany !== '' : selectedDriver !== '';\n      case 3: return selectedMonth !== '' && selectedPeriod !== '';\n      case 4: return true;\n      default: return false;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-center justify-center h-64\">\n            <Loader2 className=\"w-8 h-8 animate-spin text-blue-600 mr-3\" />\n            <span className=\"text-lg text-gray-600\">Veriler yükleniyor...</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Fatura Excel Oluştur</h1>\n          <Link \n            href=\"/\"\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors mt-4 inline-block\"\n          >\n            Ana Sayfaya Dön\n          </Link>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm text-gray-600\">Adım {step} / 4</span>\n            <span className=\"text-sm text-gray-600\">{Math.round((step / 4) * 100)}% Tamamlandı</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${(step / 4) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          {/* Step 1: Fatura Türü Seçimi */}\n          {step === 1 && (\n            <div>\n              <div className=\"flex items-center mb-6\">\n                <FileSpreadsheet className=\"w-8 h-8 text-blue-600 mr-3\" />\n                <h2 className=\"text-2xl font-semibold text-gray-800\">Fatura Türünü Seçin</h2>\n              </div>\n              <p className=\"text-gray-600 mb-6\">Bu fatura hangi tür için oluşturulacak?</p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <button\n                  onClick={() => {\n                    setFaturaType('sirket');\n                    setSelectedCompany('');\n                    setSelectedDriver('');\n                  }}\n                  className={`p-6 border-2 rounded-lg text-left transition-all ${\n                    faturaType === 'sirket' \n                      ? 'border-blue-500 bg-blue-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <Building2 className=\"w-8 h-8 text-blue-600 mb-3\" />\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Şirket İçin Fatura</h3>\n                  <p className=\"text-gray-600\">Şirket fatura ve fiyat bilgileri için Excel oluştur</p>\n                </button>\n\n                <button\n                  onClick={() => {\n                    setFaturaType('sofor');\n                    setSelectedCompany('');\n                    setSelectedDriver('');\n                  }}\n                  className={`p-6 border-2 rounded-lg text-left transition-all ${\n                    faturaType === 'sofor' \n                      ? 'border-blue-500 bg-blue-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <Users className=\"w-8 h-8 text-green-600 mb-3\" />\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Şöför İçin Fatura</h3>\n                  <p className=\"text-gray-600\">Şöför fatura ve fiyat bilgileri için Excel oluştur</p>\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Şirket/Şöför Seçimi */}\n          {step === 2 && (\n            <div>\n              <div className=\"flex items-center mb-6\">\n                {faturaType === 'sirket' ? (\n                  <Building2 className=\"w-8 h-8 text-blue-600 mr-3\" />\n                ) : (\n                  <Users className=\"w-8 h-8 text-green-600 mr-3\" />\n                )}\n                <h2 className=\"text-2xl font-semibold text-gray-800\">\n                  {faturaType === 'sirket' ? 'Şirket Seçin' : 'Şöför Seçin'}\n                </h2>\n              </div>\n              <p className=\"text-gray-600 mb-6\">\n                {faturaType === 'sirket' \n                  ? 'Hangi şirket için fatura oluşturulacak?' \n                  : 'Hangi şöför için fatura oluşturulacak?'\n                }\n              </p>\n              \n              {faturaType === 'sirket' ? (\n                // Şirket Seçimi\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 max-h-96 overflow-y-auto\">\n                  {companies.map((company) => (\n                    <button\n                      key={company.sirket_id}\n                      onClick={() => setSelectedCompany(company.sirket_id.toString())}\n                      className={`p-4 border-2 rounded-lg text-left transition-all ${\n                        selectedCompany === company.sirket_id.toString() \n                          ? 'border-blue-500 bg-blue-50' \n                          : 'border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <h3 className=\"text-lg font-semibold text-gray-800\">{company.sirket_adi}</h3>\n                      <p className=\"text-sm text-gray-500\">Vergi No: {company.vergi_numarasi}</p>\n                    </button>\n                  ))}\n                </div>\n              ) : (\n                // Şöför Seçimi\n                <div className=\"grid grid-cols-1 gap-3 max-h-96 overflow-y-auto\">\n                  {drivers.map((driver) => (\n                    <button\n                      key={driver.arac_id}\n                      onClick={() => setSelectedDriver(driver.arac_id.toString())}\n                      className={`p-4 border-2 rounded-lg text-left transition-all ${\n                        selectedDriver === driver.arac_id.toString() \n                          ? 'border-blue-500 bg-blue-50' \n                          : 'border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h3 className=\"text-lg font-semibold text-gray-800\">{driver.sofor_adi}</h3>\n                          <p className=\"text-sm text-gray-600\">Plaka: {driver.plaka}</p>\n                          <p className=\"text-sm text-gray-500\">Vergi No: {driver.vergi_numarasi}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-sm font-medium text-gray-600\">{driver.sirket.sirket_adi}</p>\n                        </div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Ay ve Dönem Seçimi */}\n          {step === 3 && (\n            <div>\n              <div className=\"flex items-center mb-6\">\n                <Calendar className=\"w-8 h-8 text-blue-600 mr-3\" />\n                <h2 className=\"text-2xl font-semibold text-gray-800\">Ay ve Dönem Seçin</h2>\n              </div>\n              <p className=\"text-gray-600 mb-6\">Hangi ay ve dönem için fatura oluşturulacak?</p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {/* Ay Seçimi */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Ay Seçin</h3>\n                  <select\n                    value={selectedMonth}\n                    onChange={(e) => setSelectedMonth(e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">Ay seçiniz...</option>\n                    {months.map((month) => (\n                      <option key={month.value} value={month.value}>\n                        {month.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Dönem Seçimi */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Dönem Seçin</h3>\n                  <div className=\"space-y-2\">\n                    {periods.map((period) => (\n                      <button\n                        key={period}\n                        onClick={() => setSelectedPeriod(period)}\n                        className={`w-full p-3 border-2 rounded-lg text-left transition-all ${\n                          selectedPeriod === period \n                            ? 'border-blue-500 bg-blue-50' \n                            : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        {period}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 4: Özet ve Excel Oluşturma */}\n          {step === 4 && (\n            <div>\n              <div className=\"flex items-center mb-6\">\n                <FileSpreadsheet className=\"w-8 h-8 text-green-600 mr-3\" />\n                <h2 className=\"text-2xl font-semibold text-gray-800\">Excel Oluştur</h2>\n              </div>\n              <p className=\"text-gray-600 mb-6\">Seçtiğiniz bilgilere göre Excel dosyası oluşturulacak.</p>\n              \n              <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Seçilen Bilgiler:</h3>\n                <div className=\"space-y-2\">\n                  <p><span className=\"font-medium\">Fatura Türü:</span> {faturaType === 'sirket' ? 'Şirket İçin Fatura' : 'Şöför İçin Fatura'}</p>\n                  {faturaType === 'sirket' ? (\n                    <p><span className=\"font-medium\">Şirket:</span> {companies.find(c => c.sirket_id.toString() === selectedCompany)?.sirket_adi}</p>\n                  ) : (\n                    <>\n                      <p><span className=\"font-medium\">Şöför:</span> {drivers.find(d => d.arac_id.toString() === selectedDriver)?.sofor_adi}</p>\n                      <p><span className=\"font-medium\">Plaka:</span> {drivers.find(d => d.arac_id.toString() === selectedDriver)?.plaka}</p>\n                      <p><span className=\"font-medium\">Şirket:</span> {drivers.find(d => d.arac_id.toString() === selectedDriver)?.sirket.sirket_adi}</p>\n                    </>\n                  )}\n                  <p><span className=\"font-medium\">Ay:</span> {months.find(m => m.value === selectedMonth)?.label}</p>\n                  <p><span className=\"font-medium\">Dönem:</span> {selectedPeriod}</p>\n                </div>\n              </div>\n\n              <button\n                onClick={handleGenerateExcel}\n                className=\"w-full bg-green-600 text-white py-4 px-6 rounded-lg hover:bg-green-700 transition-colors font-semibold text-lg\"\n              >\n                Excel Dosyası Oluştur\n              </button>\n            </div>\n          )}\n\n          {/* Navigation Buttons */}\n          <div className=\"flex justify-between mt-8 pt-6 border-t border-gray-200\">\n            <button\n              onClick={handleBack}\n              disabled={step === 1}\n              className={`px-6 py-2 rounded-lg font-medium transition-colors ${\n                step === 1 \n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              Geri\n            </button>\n\n            {step < 4 ? (\n              <button\n                onClick={handleNext}\n                disabled={!canProceed()}\n                className={`px-6 py-2 rounded-lg font-medium transition-colors flex items-center ${\n                  canProceed() \n                    ? 'bg-blue-600 text-white hover:bg-blue-700' \n                    : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                }`}\n              >\n                İleri\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaturaExcelPage; "],"names":[],"mappings":"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","debugId":null}}]
}