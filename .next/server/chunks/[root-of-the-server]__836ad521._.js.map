{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/cekler/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// Çekleri listele\nexport async function GET() {\n  try {\n    const cekler = await prisma.cekler.findMany({\n      orderBy: {\n        olusturma_tarihi: 'desc'\n      }\n    });\n\n    return NextResponse.json(cekler);\n  } catch (error) {\n    console.error('Çekler alınırken hata:', error);\n    return NextResponse.json(\n      { error: 'Çekler alınırken bir hata oluştu' },\n      { status: 500 }\n    );\n  }\n}\n\n// Yeni çek ekle\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { cek_no, vade_tarihi, tutar, aciklama, odenme_tarihi } = body;\n\n    if (!cek_no || !vade_tarihi || !tutar) {\n      return NextResponse.json(\n        { error: 'Çek no, vade tarihi ve tutar zorunludur' },\n        { status: 400 }\n      );\n    }\n\n    const yeniCek = await prisma.cekler.create({\n      data: {\n        cek_no,\n        vade_tarihi: new Date(vade_tarihi),\n        tutar: parseFloat(tutar),\n        aciklama: aciklama || null,\n        odenme_tarihi: odenme_tarihi ? new Date(odenme_tarihi) : null\n      }\n    });\n\n    return NextResponse.json(yeniCek, { status: 201 });\n  } catch (error: any) {\n    console.error('Çek ekleme hatası:', error);\n    \n    if (error.code === 'P2002') {\n      return NextResponse.json(\n        { error: 'Bu çek numarası zaten mevcut' },\n        { status: 400 }\n      );\n    }\n    \n    return NextResponse.json(\n      { error: 'Çek eklenirken bir hata oluştu' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAGxB,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,OAAO,MAAM,CAAC,QAAQ,CAAC;YAC1C,SAAS;gBACP,kBAAkB;YACpB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAmC,GAC5C;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG;QAEhE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0C,GACnD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC;YACzC,MAAM;gBACJ;gBACA,aAAa,IAAI,KAAK;gBACtB,OAAO,WAAW;gBAClB,UAAU,YAAY;gBACtB,eAAe,gBAAgB,IAAI,KAAK,iBAAiB;YAC3D;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,sBAAsB;QAEpC,IAAI,MAAM,IAAI,KAAK,SAAS;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiC,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}