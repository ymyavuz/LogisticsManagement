{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/arac-muhasebe/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// GET - Araç muhasebe kayıtlarını listele\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const aracId = searchParams.get('arac_id');\n\n    const whereClause = aracId ? { arac_id: parseInt(aracId) } : {};\n\n    const muhasebeKayitlari = await prisma.aracMuhasebe.findMany({\n      where: whereClause,\n      include: {\n        arac: {\n          select: {\n            plaka: true,\n            sofor_adi: true\n          }\n        }\n      },\n      orderBy: {\n        id: 'desc'\n      }\n    });\n\n    return NextResponse.json(muhasebeKayitlari);\n  } catch (error) {\n    console.error('Araç muhasebe kayıtları getirme hatası:', error);\n    return NextResponse.json(\n      { error: 'Araç muhasebe kayıtları getirilirken hata oluştu' },\n      { status: 500 }\n    );\n  }\n}\n\n// POST - Yeni araç muhasebe kaydı ekle\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { arac_id, tutar } = body;\n\n    if (!arac_id || tutar === undefined) {\n      return NextResponse.json(\n        { error: 'Araç ID ve tutar gereklidir' },\n        { status: 400 }\n      );\n    }\n\n    const yeniKayit = await prisma.aracMuhasebe.create({\n      data: {\n        arac_id: parseInt(arac_id),\n        tutar: parseFloat(tutar)\n      },\n      include: {\n        arac: {\n          select: {\n            plaka: true,\n            sofor_adi: true\n          }\n        }\n      }\n    });\n\n    return NextResponse.json(yeniKayit);\n  } catch (error) {\n    console.error('Araç muhasebe kaydı ekleme hatası:', error);\n    return NextResponse.json(\n      { error: 'Araç muhasebe kaydı eklenirken hata oluştu' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT - Araç muhasebe kaydını güncelle\nexport async function PUT(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { id, arac_id, tutar } = body;\n\n    if (!id || !arac_id || tutar === undefined) {\n      return NextResponse.json(\n        { error: 'ID, Araç ID ve tutar gereklidir' },\n        { status: 400 }\n      );\n    }\n\n    const guncellenenKayit = await prisma.aracMuhasebe.update({\n      where: { id: parseInt(id) },\n      data: {\n        arac_id: parseInt(arac_id),\n        tutar: parseFloat(tutar)\n      },\n      include: {\n        arac: {\n          select: {\n            plaka: true,\n            sofor_adi: true\n          }\n        }\n      }\n    });\n\n    return NextResponse.json(guncellenenKayit);\n  } catch (error) {\n    console.error('Araç muhasebe kaydı güncelleme hatası:', error);\n    return NextResponse.json(\n      { error: 'Araç muhasebe kaydı güncellenirken hata oluştu' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE - Araç muhasebe kaydını sil\nexport async function DELETE(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const id = searchParams.get('id');\n\n    if (!id) {\n      return NextResponse.json(\n        { error: 'ID gereklidir' },\n        { status: 400 }\n      );\n    }\n\n    await prisma.aracMuhasebe.delete({\n      where: { id: parseInt(id) }\n    });\n\n    return NextResponse.json({ message: 'Araç muhasebe kaydı başarıyla silindi' });\n  } catch (error) {\n    console.error('Araç muhasebe kaydı silme hatası:', error);\n    return NextResponse.json(\n      { error: 'Araç muhasebe kaydı silinirken hata oluştu' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}