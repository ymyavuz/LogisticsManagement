{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/seferler/sofor-fiyat-guncelle/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { seferId, sofore_odenen_ucret } = await request.json();\n\n    // Parametrelerin doğruluğunu kontrol et\n    if (!seferId || sofore_odenen_ucret === undefined) {\n      return NextResponse.json(\n        { error: 'Sefer ID ve fiyat bilgisi gereklidir' },\n        { status: 400 }\n      );\n    }\n\n    // Sayısal değere dönüştür\n    const sefer_id = parseInt(seferId.toString());\n    const ucret = parseFloat(sofore_odenen_ucret.toString());\n    \n    if (isNaN(sefer_id) || isNaN(ucret)) {\n      return NextResponse.json(\n        { error: 'Geçersiz Sefer ID veya fiyat bilgisi' },\n        { status: 400 }\n      );\n    }\n\n    // Veritabanında fiyat güncelleme\n    const guncellenenSefer = await prisma.seferler.update({\n      where: {\n        sefer_id: sefer_id\n      },\n      data: {\n        sofore_odenen_ucret: ucret\n      }\n    });\n\n    return NextResponse.json(guncellenenSefer);\n  } catch (error) {\n    console.error('Fiyat güncellenirken hata oluştu:', error);\n    return NextResponse.json(\n      { error: 'Fiyat güncellenirken bir hata oluştu' },\n      { status: 500 }\n    );\n  } finally {\n    await prisma.$disconnect();\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE3D,wCAAwC;QACxC,IAAI,CAAC,WAAW,wBAAwB,WAAW;YACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,0BAA0B;QAC1B,MAAM,WAAW,SAAS,QAAQ,QAAQ;QAC1C,MAAM,QAAQ,WAAW,oBAAoB,QAAQ;QAErD,IAAI,MAAM,aAAa,MAAM,QAAQ;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,iCAAiC;QACjC,MAAM,mBAAmB,MAAM,OAAO,QAAQ,CAAC,MAAM,CAAC;YACpD,OAAO;gBACL,UAAU;YACZ;YACA,MAAM;gBACJ,qBAAqB;YACvB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuC,GAChD;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF","debugId":null}}]
}