{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/ciro-hesapla/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// Toplam fiyatı hesapla (MT * Birim Fiyat)\nconst hesaplaToplamFiyat = (sefer: any, birimFiyat: number): number => {\n  // YAP-İstanbul (sirket_id=2) için birim fiyat doğrudan toplam fiyat olarak kullanılır\n  if (sefer.sirket_id === 2) {\n    return birimFiyat;\n  }\n  \n  // Diğer şirketler için MT * Birim Fiyat formülü uygulanır\n  const mt = sefer.mt || 0;\n  return mt * birimFiyat;\n};\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Tüm seferler\n    const tumSeferler = await prisma.seferler.findMany({\n      include: {\n        sirket: true,\n        arac: true\n      }\n    });\n\n    // Toplam ciro hesaplaması - MT * Birim Fiyat formülü ile\n    const toplamCiro = tumSeferler.reduce((toplam, sefer) => {\n      const toplamFiyat = hesaplaToplamFiyat(sefer, sefer.sirketten_alinan_ucret);\n      return toplam + toplamFiyat;\n    }, 0);\n\n    return NextResponse.json({\n      toplamCiro,\n      seferSayisi: tumSeferler.length,\n      hesaplamaNotlari: {\n        genel: 'Hesaplamalar MT × Birim Fiyat formülü ile yapılmıştır',\n        yapIstanbulOzel: 'YAP-İstanbul (ID: 2) için birim fiyat = toplam fiyat olarak hesaplanmıştır'\n      }\n    });\n\n  } catch (error) {\n    console.error('Ciro hesaplanırken hata:', error);\n    return NextResponse.json(\n      { error: 'Ciro hesaplanırken bir hata oluştu' },\n      { status: 500 }\n    );\n  } finally {\n    await prisma.$disconnect();\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAE/B,2CAA2C;AAC3C,MAAM,qBAAqB,CAAC,OAAY;IACtC,sFAAsF;IACtF,IAAI,MAAM,SAAS,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,0DAA0D;IAC1D,MAAM,KAAK,MAAM,EAAE,IAAI;IACvB,OAAO,KAAK;AACd;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,eAAe;QACf,MAAM,cAAc,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC;YACjD,SAAS;gBACP,QAAQ;gBACR,MAAM;YACR;QACF;QAEA,yDAAyD;QACzD,MAAM,aAAa,YAAY,MAAM,CAAC,CAAC,QAAQ;YAC7C,MAAM,cAAc,mBAAmB,OAAO,MAAM,sBAAsB;YAC1E,OAAO,SAAS;QAClB,GAAG;QAEH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,aAAa,YAAY,MAAM;YAC/B,kBAAkB;gBAChB,OAAO;gBACP,iBAAiB;YACnB;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAqC,GAC9C;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF","debugId":null}}]
}