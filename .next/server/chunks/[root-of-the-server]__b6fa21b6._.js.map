{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  global.prisma = prisma;\n} "],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C;IACzC,OAAO,MAAM,GAAG;AAClB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/sirketler/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { prisma } from '@/lib/db';\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    const { sirket_adi, vergi_numarasi } = body;\n\n    console.log('Şirket ekleme isteği alındı:', { sirket_adi, vergi_numarasi });\n\n    // Gerekli alanları kontrol et\n    if (!sirket_adi || !vergi_numarasi) {\n      console.log('Eksik bilgi:', { sirket_adi, vergi_numarasi });\n      return NextResponse.json(\n        { error: 'Şirket adı ve vergi numarası alanları zorunludur' },\n        { status: 400 }\n      );\n    }\n\n    // Veritabanına şirketi ekle\n    const yeniSirket = await prisma.sirketler.create({\n      data: {\n        sirket_adi,\n        vergi_numarasi\n      }\n    });\n\n    console.log('Şirket başarıyla eklendi:', yeniSirket);\n\n    return NextResponse.json({ \n      basarili: true, \n      mesaj: 'Şirket başarıyla eklendi',\n      sirket: yeniSirket \n    }, { status: 201 });\n    \n  } catch (error: any) {\n    console.error('Şirket ekleme hatası:', error);\n    \n    // Vergi numarası benzersizlik hatası artık kontrol edilmiyor\n    \n    return NextResponse.json(\n      { error: 'Şirket eklenirken bir hata oluştu: ' + error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET() {\n  try {\n    console.log('Şirketler listesi isteği alındı');\n    \n    // Tüm şirketleri getir\n    const tumSirketler = await prisma.sirketler.findMany();\n    \n    console.log(`${tumSirketler.length} şirket bulundu:`, JSON.stringify(tumSirketler));\n    \n    return NextResponse.json(tumSirketler);\n  } catch (error: any) {\n    console.error('Şirketleri getirme hatası:', error);\n    return NextResponse.json(\n      { error: 'Şirketler getirilirken bir hata oluştu: ' + error.message },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG;QAEvC,QAAQ,GAAG,CAAC,gCAAgC;YAAE;YAAY;QAAe;QAEzE,8BAA8B;QAC9B,IAAI,CAAC,cAAc,CAAC,gBAAgB;YAClC,QAAQ,GAAG,CAAC,gBAAgB;gBAAE;gBAAY;YAAe;YACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAmD,GAC5D;gBAAE,QAAQ;YAAI;QAElB;QAEA,4BAA4B;QAC5B,MAAM,aAAa,MAAM,kHAAA,CAAA,SAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAC/C,MAAM;gBACJ;gBACA;YACF;QACF;QAEA,QAAQ,GAAG,CAAC,6BAA6B;QAEzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,UAAU;YACV,OAAO;YACP,QAAQ;QACV,GAAG;YAAE,QAAQ;QAAI;IAEnB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB;QAEvC,6DAA6D;QAE7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,wCAAwC,MAAM,OAAO;QAAC,GAC/D;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,uBAAuB;QACvB,MAAM,eAAe,MAAM,kHAAA,CAAA,SAAM,CAAC,SAAS,CAAC,QAAQ;QAEpD,QAAQ,GAAG,CAAC,GAAG,aAAa,MAAM,CAAC,gBAAgB,CAAC,EAAE,KAAK,SAAS,CAAC;QAErE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,6CAA6C,MAAM,OAAO;QAAC,GACpE;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}