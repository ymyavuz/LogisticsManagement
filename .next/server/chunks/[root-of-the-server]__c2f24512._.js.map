{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  global.prisma = prisma;\n} "],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C;IACzC,OAAO,MAAM,GAAG;AAClB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/araclar/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { prisma } from '@/lib/db';\nimport { NextRequest } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prismaClient = new PrismaClient();\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json();\n    const { plaka, sofor_adi, vergi_numarasi, sirket_id } = body;\n\n    console.log('Araç ekleme isteği alındı:', { plaka, sofor_adi, vergi_numarasi, sirket_id });\n\n    // Gerekli alanları kontrol et\n    if (!plaka || !sofor_adi || !vergi_numarasi || !sirket_id) {\n      console.log('Eksik bilgi:', { plaka, sofor_adi, vergi_numarasi, sirket_id });\n      return NextResponse.json(\n        { error: 'Plaka, şoför adı, vergi numarası ve şirket ID alanları zorunludur' },\n        { status: 400 }\n      );\n    }\n\n    // Şirketin var olup olmadığını kontrol et\n    const sirket = await prisma.sirketler.findUnique({\n      where: { sirket_id: parseInt(sirket_id.toString()) }\n    });\n\n    if (!sirket) {\n      return NextResponse.json(\n        { error: 'Belirtilen şirket bulunamadı' },\n        { status: 400 }\n      );\n    }\n\n    // Veritabanına aracı ekle\n    const yeniArac = await prisma.araclar.create({\n      data: {\n        plaka,\n        sofor_adi,\n        vergi_numarasi,\n        sirket_id: parseInt(sirket_id.toString())\n      }\n    });\n\n    console.log('Araç başarıyla eklendi:', yeniArac);\n\n    return NextResponse.json({ \n      basarili: true, \n      mesaj: 'Araç başarıyla eklendi',\n      arac: yeniArac \n    }, { status: 201 });\n    \n  } catch (error: any) {\n    console.error('Araç ekleme hatası:', error);\n    \n    return NextResponse.json(\n      { error: 'Araç eklenirken bir hata oluştu: ' + error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const araclar = await prismaClient.araclar.findMany({\n      include: {\n        sirket: true\n      },\n      orderBy: [\n        { sirket: { sirket_adi: 'asc' } },\n        { sofor_adi: 'asc' },\n        { plaka: 'asc' }\n      ]\n    });\n\n    return NextResponse.json(araclar);\n\n  } catch (error) {\n    console.error('Araçlar getirme hatası:', error);\n    return NextResponse.json(\n      { error: 'Araçlar getirilirken bir hata oluştu' },\n      { status: 500 }\n    );\n  } finally {\n    await prismaClient.$disconnect();\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;AAEA,MAAM,eAAe,IAAI,6HAAA,CAAA,eAAY;AAE9B,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,GAAG;QAExD,QAAQ,GAAG,CAAC,8BAA8B;YAAE;YAAO;YAAW;YAAgB;QAAU;QAExF,8BAA8B;QAC9B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAkB,CAAC,WAAW;YACzD,QAAQ,GAAG,CAAC,gBAAgB;gBAAE;gBAAO;gBAAW;gBAAgB;YAAU;YAC1E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoE,GAC7E;gBAAE,QAAQ;YAAI;QAElB;QAEA,0CAA0C;QAC1C,MAAM,SAAS,MAAM,kHAAA,CAAA,SAAM,CAAC,SAAS,CAAC,UAAU,CAAC;YAC/C,OAAO;gBAAE,WAAW,SAAS,UAAU,QAAQ;YAAI;QACrD;QAEA,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,0BAA0B;QAC1B,MAAM,WAAW,MAAM,kHAAA,CAAA,SAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC3C,MAAM;gBACJ;gBACA;gBACA;gBACA,WAAW,SAAS,UAAU,QAAQ;YACxC;QACF;QAEA,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,UAAU;YACV,OAAO;YACP,MAAM;QACR,GAAG;YAAE,QAAQ;QAAI;IAEnB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uBAAuB;QAErC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,sCAAsC,MAAM,OAAO;QAAC,GAC7D;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,UAAU,MAAM,aAAa,OAAO,CAAC,QAAQ,CAAC;YAClD,SAAS;gBACP,QAAQ;YACV;YACA,SAAS;gBACP;oBAAE,QAAQ;wBAAE,YAAY;oBAAM;gBAAE;gBAChC;oBAAE,WAAW;gBAAM;gBACnB;oBAAE,OAAO;gBAAM;aAChB;QACH;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuC,GAChD;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,aAAa,WAAW;IAChC;AACF","debugId":null}}]
}