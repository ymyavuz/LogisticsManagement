{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  global.prisma = prisma;\n} "],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C;IACzC,OAAO,MAAM,GAAG;AAClB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/yusufmertyavuz/Desktop/nakliyeemm/src/app/api/debug/sofor-seferler/route.ts"],"sourcesContent":["import { NextResponse, NextRequest } from 'next/server';\nimport { prisma } from '@/lib/db';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const soforAdi = searchParams.get('sofor') || 'Tahsin'; // Varsayılan olarak Tahsin\n    const ay = searchParams.get('ay') ? parseInt(searchParams.get('ay') || '1') : 1; // Varsayılan olarak Ocak (1. ay)\n    const donem = searchParams.get('donem') ? parseInt(searchParams.get('donem') || '0') : 0; // 0 tüm dönemler\n    const yil = searchParams.get('yil') || new Date().getFullYear().toString();\n\n    // Önce soforun aracını bulalım\n    const arac = await prisma.araclar.findFirst({\n      where: {\n        sofor_adi: {\n          contains: soforAdi\n        }\n      }\n    });\n\n    if (!arac) {\n      return NextResponse.json({ error: `${soforAdi} isimli şoför bulunamadı` }, { status: 404 });\n    }\n\n    // Filtrelemeyi ay ve donem değerlerine göre yap\n    const where: any = {\n      arac_id: arac.arac_id,\n      ay: ay\n    };\n\n    // Eğer belirli bir dönem isteniyorsa filtreye ekle\n    if (donem > 0) {\n      where.donem = donem;\n    }\n\n    // Seferleri getir\n    const seferler = await prisma.seferler.findMany({\n      where,\n      include: {\n        sirket: true\n      },\n      orderBy: {\n        donem: 'asc'\n      }\n    });\n\n    // Seferlerin detaylı hesaplamalarını yapalım\n    const detayliSeferler = seferler.map(sefer => {\n      // Ham gelir hesaplama - YAP-İstanbul için özel durum\n      let hamGelir = 0;\n      let hesaplamaYontemi = '';\n      \n      if (sefer.sirket_id === 2) { // YAP-İstanbul için MT ile çarpma yapılmayacak\n        hamGelir = sefer.sofore_odenen_ucret || 0;\n        hesaplamaYontemi = 'sofore_odenen_ucret (MT ile çarpılmadı)';\n      } else {\n        // Diğer tüm şirketler için MT ile çarpılacak\n        const birimFiyati = sefer.sofore_odenen_ucret || 0;\n        const mt = sefer.mt || 0;\n        hamGelir = birimFiyati * mt;\n        hesaplamaYontemi = 'sofore_odenen_ucret * MT';\n      }\n\n      // KDV ve tevkifat hesaplama - şoför hesaplamalarında KDV'nin %20'si olarak\n      const kdvTutari = hamGelir * 0.20; // %20 KDV\n      const kdvDahilTutar = hamGelir + kdvTutari; // KDV dahil tutar\n      const tevkifatTutari = kdvTutari * 0.20; // tevkifat KDV'nin %20'si olmalı\n      const netGelir = kdvDahilTutar - tevkifatTutari; // Tevkifat düşülmüş gelir\n\n      return {\n        sefer_id: sefer.sefer_id,\n        irsaliye_numarasi: sefer.irsaliye_numarasi,\n        irsaliye_tarihi: sefer.irsaliye_tarihi,\n        tahliye_yeri: sefer.tahliye_yeri,\n        sirket_id: sefer.sirket_id,\n        sirket_adi: sefer.sirket?.sirket_adi || 'Bilinmeyen',\n        mt: sefer.mt,\n        sirketten_alinan_ucret: sefer.sirketten_alinan_ucret,\n        sofore_odenen_ucret: sefer.sofore_odenen_ucret,\n        hesaplama: {\n          yontem: hesaplamaYontemi,\n          hamGelir,\n          kdvTutari,\n          kdvDahilTutar,\n          tevkifatTutari,\n          netGelir\n        }\n      };\n    });\n\n    // Toplam hesaplamaları yap\n    const toplamHamGelir = detayliSeferler.reduce((toplam, sefer) => toplam + sefer.hesaplama.hamGelir, 0);\n    const toplamKDV = detayliSeferler.reduce((toplam, sefer) => toplam + sefer.hesaplama.kdvTutari, 0);\n    const toplamKDVDahil = detayliSeferler.reduce((toplam, sefer) => toplam + sefer.hesaplama.kdvDahilTutar, 0);\n    const toplamTevkifat = detayliSeferler.reduce((toplam, sefer) => toplam + sefer.hesaplama.tevkifatTutari, 0);\n    const toplamNetGelir = detayliSeferler.reduce((toplam, sefer) => toplam + sefer.hesaplama.netGelir, 0);\n\n    return NextResponse.json({\n      sofor: soforAdi,\n      arac: arac,\n      donem: {\n        ay: ay,\n        yil: yil,\n        baslangic: new Date(`${yil}-${ay.toString().padStart(2, '0')}-01`),\n        bitis: new Date(new Date(`${yil}-${ay.toString().padStart(2, '0')}-01`)).setMonth(new Date(`${yil}-${ay.toString().padStart(2, '0')}-01`).getMonth() + 1)\n      },\n      seferSayisi: seferler.length,\n      seferler: detayliSeferler,\n      toplamlar: {\n        hamGelir: toplamHamGelir,\n        kdvTutari: toplamKDV,\n        kdvDahilTutar: toplamKDVDahil,\n        tevkifatTutari: toplamTevkifat,\n        netGelir: toplamNetGelir\n      }\n    });\n\n  } catch (error: any) {\n    console.error('Debug endpoint hatası:', error);\n    return NextResponse.json(\n      { error: 'Seferler alınırken bir hata oluştu: ' + error.message },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}